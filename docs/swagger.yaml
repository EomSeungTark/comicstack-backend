basePath: /
definitions:
  common.BasicResult:
    properties:
      status:
        type: boolean
    type: object
  common.DeleteToon:
    properties:
      sid:
        type: integer
      title:
        type: string
      user_id:
        type: string
    type: object
  common.LoginInfo:
    properties:
      password:
        type: string
      user_id:
        type: string
    type: object
  common.LoginResult:
    properties:
      address:
        type: string
      email:
        type: string
      email_agree:
        type: boolean
      jwt:
        $ref: '#/definitions/jwt.TokenDetails'
      name:
        type: string
      phone_number:
        type: string
      sms_agree:
        type: boolean
      status:
        type: boolean
      user_id:
        type: string
    type: object
  common.UpdateToon:
    properties:
      ending:
        type: boolean
      sid:
        type: integer
      title:
        type: string
      user_id:
        type: string
    type: object
  jwt.TokenDetails:
    properties:
      accesstoken:
        type: string
      accessuuid:
        type: string
      atexpires:
        type: integer
      refreshtoken:
        type: string
      refreshuuid:
        type: string
      rtexpires:
        type: integer
    type: object
host: localhost:4000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/jwt/check:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: comment
          schema:
            type: string
      security:
      - jwt-access: []
      tags:
      - jwt-check
  /api/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User Info Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/common.LoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.LoginResult'
      tags:
      - user-login
  /api/refresh:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: comment
          schema:
            type: string
      security:
      - jwt-refresh: []
      tags:
      - jwt-refresh
  /api/toon/deletetoon:
    post:
      consumes:
      - application/json
      parameters:
      - description: deletetoon
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/common.DeleteToon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.BasicResult'
      tags:
      - delete-toon
  /api/toon/setending:
    post:
      consumes:
      - application/json
      parameters:
      - description: set toon ending
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/common.UpdateToon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.BasicResult'
      tags:
      - set-toon-ending
securityDefinitions:
  jwt-access:
    in: header
    name: Authorization
    type: apiKey
  jwt-refresh:
    in: header
    name: Refresh_Token
    type: apiKey
swagger: "2.0"
