{"version":3,"sources":["image/logo.svg","contextAPI/user.js","components/modal.js","components/dropDownMenu.js","layout/header.js","image/logo_white.svg","layout/footer.js","image/ad01.png","components/adsWrapper.js","components/toonListWrapper.js","image/first-slide-image.png","image/second-slide-image.gif","image/third-slide-image.gif","components/mainSlide.js","image/thumb1.PNG","image/thumb2.PNG","image/thumb3.PNG","components/listBlock.js","pages/mainPage.js","image/test-webtoon.jpeg","contextAPI/comics.js","components/toon.js","components/toonList.js","components/dayNav.js","pages/seriesPage.js","components/registerForm.js","pages/registerPage.js","components/episodeHeader.js","components/episodeItem.js","contextAPI/episode.js","components/episodeList.js","pages/episodePage.js","components/viewHeader.js","contextAPI/episodeImg.js","components/viewBody.js","pages/viewPage.js","components/registCartoon.js","pages/uploadPage.js","contextAPI/lecture.js","components/lectureList.js","pages/lectureListPage.js","components/registEpisode.js","pages/registEpisodePage.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","error","loading","entity","user_id","password","address","phone_number","persnal_basic_agree","persnal_share_agree","email","sms_agree","email_agree","name","status","signinLoading","signin","idCheckLoading","idCheck","loginLoading","login","reducer","state","action","type","signinloading","Error","UserStateContext","createContext","UserDispatchcontext","UserProvider","children","useReducer","dispatch","Provider","value","useStateUser","useContext","useDispatchUser","userInfo","a","axios","post","response","console","log","data","LoginModalComponent","isOpen","onClose","title","userDispatch","useState","userId","setUserId","userPassword","setUserPassword","handleLogin","loginCheck","then","result","alert","blockScrollOnMount","size","style","textAlign","marginBottom","placeholder","onChange","e","target","colorScheme","mr","onClick","Wrapper","styled","div","DropDownMenu","props","menuList","openValue","logoutFunction","useDisclosure","onOpen","display","map","menu","text","className","to","link","Header","userState","openMenu","setOpenMenu","handleOpenMenu","handleLogout","width","height","src","Logo","alt","backgroundColor","color","marginTop","Edit","marginLeft","Search","Close","fontSize","marginRight","Hamburger","Footer","border","AdsWarpper","AdsWrapper","adImage","ToonListWrapper","MainSilde","CustomRightArrow","ChevronRight","right","opacity","cursor","zIndex","CustomLeftArrow","ChevronLeft","left","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","FirstImage","px","SecondImage","ThirdImage","viewCardCount","ListBlock","thumbnail1","thumbnail2","thumbnail3","MainPage","entities","day","thumbnail_path","context","toon_sid","payload","ComicsListStateContext","ComicsListDispatchcontext","ComicsListProvider","get","toons","ItemCard","li","Toon","currentDay","comicsState","comicsDispatch","useEffect","getList","filter","item","DivWrapper","ul","ToonList","DayNavWrapper","DayNav","setCurrentDay","dayList","SeriesPage","FormWrapper","Title","RegisterForm","userInfoState","userInfoDispatch","userName","setUserName","userPhone","setUserPhone","setUserPasswordCheck","userEmail","setUserEmail","userAddress","setUserAddress","history","useHistory","handleIdCheck","margin","paddingTop","isRequired","signinUser","push","RegisterPage","InfoWrapper","InfoTitle","InfoStory","ButtonWrapper","EpisodeHeader","toonId","episodeName","testImage","borderRadius","EpisodeItemWrapper","ImageZone","ContentZone","EpisodeName","EpisodeTitle","EpisodeUploadDate","EpisodeItem","id","thumbNail","uploadDate","episode","episode_name","views","create_at","EpisodeListStateContext","EpisodeListDispatchcontext","EpisodeListProvider","parseInt","episodes_info","EpisodeListBlock","EpisodeList","episodeListState","episodeListDispatch","getEpisodeList","substr","EpisodePage","queryString","parse","window","location","search","HeaderWrapper","ViewHeader","viewHeaderUI","goBack","w","h","toon_context","usercomments","commnet","good","bad","EpisodeImageStateContext","EpisodeImageDispatchcontext","EpisodeImageProvider","Body","BodyWrapper","ViewBody","setViewHeaderUI","episodeImageState","episodeImageDispatch","setScrollY","logit","pageYOffset","addEventListener","removeEventListener","getEpisodeImage","ViewPage","headerUI","setHeaderUI","RegistCartoon","setImgBase64","imgFile","setImgFile","fileView","setFileView","webToonUploadDay","setWebToonUploadDay","setTitle","summary","setSummary","genre","setGenre","length","imgValue","WriteBoard","fd","FormData","Object","values","forEach","file","append","headers","catch","spacing","htmlFor","event","files","i","reader","FileReader","readAsDataURL","onloadend","base64","base64Sub","toString","imgBase64","multiple","UploadPage","LectureListStateContext","LectureListDispatchcontext","LectureListProvider","Warpper","LectureList","lectureListState","lectureListDispatch","getLectureList","LectureListPage","RegistEpisode","thumbnailFile","setThumbnailFile","episodeFile","setEpisodeFile","thumbnailFileView","setThumbnailFileView","episodeFileView","setEpisodeFileView","seriesName","handleChangeFile","defaultValue","RegistEpisodePage","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28b1aa17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d30a4059.svg\";","import React, { useReducer, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n\n\nconst initialState = {\n\terror: false,\n\tloading: false,\n\tentity: {\n\t\tuser_id: \"\",\n\t\tpassword: \"\",\n\t\taddress: \"\",\n\t\tphone_number: \"\",\n\t\tpersnal_basic_agree: false,\n\t\tpersnal_share_agree: false,\n\t\temail: \"\",\n\t\tsms_agree: false,\n\t\temail_agree: false,\n\t\tname: \"\",\n    status: false,\n\t},\n  signinLoading: false,\n  signin: false,\n  idCheckLoading: false,\n  idCheck: false,\n  loginLoading: false,\n  login: false,\n}\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SIGNIN\":\n      return {\n        ...state,\n        // signin: action.data,\n\t\t\t\tsigninloading: true\n      };\n    case \"ID_CHECK\":\n      return {\n        ...state,\n        idCheck: action.idCheck,\n\t\t\t\tidCheckLoading: true\n      };\n    case \"LOGIN\":\n      return {\n        ...state,\n        login: action.login,\n        entity: action.entity,\n\t\t\t\tloginLoading: true\n      };\n    case \"LOGOUT\":\n      return {\n        ...initialState\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\nconst UserStateContext = createContext();\nconst UserDispatchcontext = createContext();\n\nexport function UserProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchcontext.Provider value={dispatch}>\n        {children}\n      </UserDispatchcontext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nexport function useStateUser() {\n  return useContext(UserStateContext);\n}\n\nexport function useDispatchUser() {\n  return useContext(UserDispatchcontext);\n}\n\nexport async function signinUser(dispatch, userInfo) {\n  try {\n    const response = await axios.post(\n      \"/api/signin\",\n\t\t\tuserInfo  //json object?\n    );\n    console.log(\"res data\", response.data);\n    if (response.data) {\n      dispatch({ type: \"SIGNIN\" });\n    }\n    return response.data;\n  } catch (e) {\n    //dispatch({ type: \"GET_DATA_FAIL\", error: e });\n    console.log(e);\n  }\n}\n\nexport async function idCheck(dispatch, user_id){\n  try {\n    const response = await axios.post(\n      \"/api/idcheck\",\n      { user_id }\n    )\n    console.log(\"res data\", response.data);\n    if(response.data){\n      dispatch({ type: \"ID_CHECK\", idCheck: response.data.status })\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function loginCheck(dispatch, user_id, password){\n  try {\n    const response = await axios.post(\n      \"/api/login\",\n      { user_id, password }\n    )\n    console.log(\"login check = \", response);\n    if(response.data){\n      dispatch({ type: \"LOGIN\", login: response.data.status, entity: response.data })\n    }\n    return response.data\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function logout(dispatch){\n  dispatch({ type: \"LOGOUT\" })\n}\n\n\n\nfunction formattingDateTostring(date) {\n  const year = date.getFullYear();\n  let month = 1 + date.getMonth();\n  month = month >= 10 ? month : \"0\" + month;\n  let day = date.getDate();\n  day = day >= 10 ? day : \"0\" + day;\n  return year + \"-\" + month + \"-\" + day;\n}\n","import React, {useState} from 'react';\nimport { useStateUser, useDispatchUser, loginCheck } from 'contextAPI/user';\nimport {Modal, ModalOverlay, ModalContent, ModalBody, ModalHeader, ModalCloseButton, Text, ModalFooter, Button, Input} from '@chakra-ui/react';\n\nexport const LoginModalComponent = ({isOpen, onClose, title}) => {\n\n  const userState = useStateUser();\n  const userDispatch = useDispatchUser();\n\n  const [userId, setUserId] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n\n  const handleLogin = () => {\n    loginCheck(userDispatch, userId, userPassword)\n    .then((result) => {\n      console.log(\"status\", result)\n      if(result.status){\n        onClose();\n      } else{\n        alert(\"아이디 비밀번호 안맞음\");\n      }\n    })\n    // if(userState.login){\n    //   onClose();\n    // } else {\n    //   alert(\"아이디 비밀번호 안맞음\");\n    // }\n  }\n\n\n  return (\n    <>\n      <Modal blockScrollOnMount={false} size={\"sm\"} isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader style={{textAlign: \"center\"}}>{title}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n\t\t\t\t\t\t<Text>username</Text>\n\t\t\t\t\t\t<Input \n              style={{marginBottom: \"10px\"}} \n              placeholder=\"아이디\" \n              onChange={(e) => setUserId(e.target.value)}\n            />\n\t\t\t\t\t\t<Text>password</Text>\n\t\t\t\t\t\t<Input \n              style={{marginBottom: \"10px\"}} \n              placeholder=\"비밀번호\"\n              type={\"password\"}\n              onChange={(e) => setUserPassword(e.target.value)}\n            />\n            {/* <Lorem count={2} /> */}\n          </ModalBody>\n\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={() => handleLogin()}>\n              login\n            </Button>\n            {/* <Button variant=\"ghost\">Secondary Action</Button> */}\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { LoginModalComponent } from \"../components/modal\";\nimport { useDisclosure } from \"@chakra-ui/react\";\n\nconst Wrapper = styled.div`\n\twidth: 8rem;\n\theight: auto;\n\tbackground-color: white;\n\tposition: absolute;\n\tz-index: 1000;\n\ttop: 8%;\n\tright: 2.5%;\n\tborder-radius: 0.3rem;\n\tbox-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n\t.menu {\n\t\twidth: 100%;\n\t\theight: 2rem;\n\t\tline-height: 2rem;\n\t\tmargin: 0.5rem auto;\n\t\tfont-weight: bold;\n\t\tbackground-color: white;\n\t\ttext-align: center;\n\t\t/* position: relative; */\n\t\t&:hover {\n\t\t\tbackground-color: #dddddd;\n\t\t}\n\t}\n`;\n\nexport const DropDownMenu = (props) => {\n\n\tconst { menuList, openValue, logoutFunction } = props;\n\tconst { isOpen, onClose, onOpen } = useDisclosure();\n\n\treturn (\n\t\t<Wrapper style={{display: `${openValue ? \"initial\" : \"none\" }`}}>\n\t\t\t{\n\t\t\t\tmenuList && menuList.map((menu) => {\n\t\t\t\t\tif(menu.text === \"로그인\") {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={\"menu\"} onClick={onOpen}>\n\t\t\t\t\t\t\t\t{menu.text}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else if(menu.text === \"로그아웃\") {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={\"menu\"} onClick={logoutFunction}>\n\t\t\t\t\t\t\t\t{menu.text}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Link to={menu.link}>\n\t\t\t\t\t\t\t\t<div className={\"menu\"}>\n\t\t\t\t\t\t\t\t\t{menu.text}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\t<LoginModalComponent title={\"로그인\"} isOpen={isOpen} onClose={onClose} />\n\t\t</Wrapper>\n\t)\n}","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Input,\n  InputGroup,\n  InputRightElement,\n  Button,\n  ButtonGroup,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { SearchIcon, EditIcon, HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport Logo from \"../image/logo.svg\";\nimport { LoginModalComponent } from \"../components/modal\";\nimport { useStateUser, useDispatchUser, logout } from \"contextAPI/user\";\nimport \"./header.scss\";\nimport { DropDownMenu } from 'components/dropDownMenu';\n\nexport default function Header() {\n  const { isOpen, onClose, onOpen } = useDisclosure();\n  const userState = useStateUser();\n  const userDispatch = useDispatchUser();\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const loginDropdownList = [\n    {\n      link: \"/series\",\n      text: \"시리즈\"\n    },\n    {\n      link: \"/register\",\n      text: \"가입하기\"\n    },\n    {\n      link: \"/login\",\n      text: \"로그인\"\n    }\n  ]\n\n  const logoutDropdownList = [\n    {\n      link: \"/series\",\n      text: \"시리즈\"\n    },\n    {\n      link: \"/upload\",\n      text: \"만화 업로드\"\n    },\n    {\n      link: \"/lecture\",\n      text: \"내 작품\"\n    },\n    {\n      link: \"/logout\",\n      text: \"로그아웃\"\n    }\n  ]\n\n  const handleOpenMenu = () => {\n    setOpenMenu(!openMenu)\n  }\n\n  const handleLogout = () => {\n    logout(userDispatch);\n  }\n\n  return (\n    <div>\n      <div className=\"HeaderLayout\">\n        <div className=\"HeaderStart\">\n          <NavLink to=\"/\">\n            <img\n              width=\"170px\"\n              height=\"85px\"\n              style={{ display: \"inline-block\" }}\n              src={Logo}\n              alt=\"logoImage\"\n            />\n          </NavLink>\n        </div>\n        <div className=\"HeaderEnd\">\n          <ButtonGroup>\n            <NavLink to={\"/series\"}>\n              <Button\n                style={{\n                  backgroundColor: \"#f2663b\",\n                  color: \"white\",\n                  height: \"33px\",\n                  marginTop: \"4px\",\n                }}\n              >\n                시리즈\n              </Button>\n            </NavLink>\n            {userState.entity.user_id ? (\n              <>\n                <NavLink to={\"/upload\"}>\n                  <Button>\n                    만화 업로드\n                    <EditIcon style={{ marginLeft: \"4px\" }} />\n                  </Button>\n                </NavLink>\n                <NavLink to={\"/lecture\"}>\n                  <Button>내 작품</Button>\n                </NavLink>\n                <Button onClick={handleLogout}>로그아웃</Button>\n              </>\n            ) : (\n              <>\n                <NavLink to={\"/register\"}>\n                  <Button>가입하기</Button>\n                </NavLink>\n                <Button onClick={onOpen}>로그인</Button>\n              </>\n            )}\n          </ButtonGroup>\n          <InputGroup className={\"input-group\"}>\n            <Input\n              style={{ marginLeft: \"15px\", height: \"36px\", marginTop: \"2px\" }}\n              size=\"md\"\n              placeholder=\"search\"\n            />\n            <InputRightElement\n              children={<SearchIcon style={{ color: \"#f74d1a\" }} />}\n            />\n          </InputGroup>\n        </div>\n        <div className={\"mobile-header-end\"}>\n          {\n            openMenu ? <CloseIcon fontSize={\"30\"} style={{marginRight: \"0.5rem\"}} onClick={handleOpenMenu}/> \n            : <HamburgerIcon fontSize={\"50\"} onClick={handleOpenMenu}/>\n          }\n          <DropDownMenu \n            openValue={openMenu}\n            menuList={userState.entity.user_id ? logoutDropdownList : loginDropdownList}\n            logoutFunction={handleLogout}\n          />\n        </div>\n      </div>\n      <LoginModalComponent title={\"로그인\"} isOpen={isOpen} onClose={onClose} />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo_white.fc1a50c3.svg\";","import styled from \"styled-components\";\nimport \"./footer.scss\";\nimport Logo from \"../image/logo_white.svg\";\n\nexport default function Footer() {\n  return (\n    <div className=\"FooterLayout\">\n      <div className=\"FooterLayoutStart\">\n        <div className=\"Service\">\n          <h3>서비스</h3>\n          <p>개발자용 코믹스택</p>\n          <p>학생용 코믹스택</p>\n          <p>코믹스택 스쿨</p>\n        </div>\n        <div className=\"Terms\">\n          <h3>약관</h3>\n          <p>개인정보 처리방침</p>\n          <p>이용약관</p>\n        </div>\n        <div className=\"Ask\">\n          <h3>문의</h3>\n          <p>FAQ/문의</p>\n          <p>기관 도입문의</p>\n        </div>\n        <div className=\"CustomerCenter\">\n          <h3>고객센터</h3>\n          <h4>코딩 테스트 및 교육 문의: 010-2354-7227</h4>\n          <p>문의하기 운영시간: 오전9시 ~ 오후 6시 (주말 및 공휴일 휴무)</p>\n          <p>점심시간: 오후 12시 ~ 오후 1시</p>\n        </div>\n        <div className=\"Logo\">\n          <img width=\"200px\" height=\"100px\" src={Logo} alt=\"logoImage\" />\n        </div>\n      </div>\n      <div className=\"FooterLayoutEnd\">\n        <hr style={{ border: \"1px solid  #444\" }} />\n        <p className=\"CompanyName\">2021 헤일러소프트</p>\n        <p className=\"CompanyDesc\">\n          헤일러소프트 / 대표 최진우 / 서울특별시 성동구 마장동 782-4 301호\n          <br></br>\n          사업자등록번호 586-23-01405\n        </p>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/ad01.a72f96c3.png\";","import styled from \"styled-components\";\nimport adImage from \"../image/ad01.png\";\n\nconst AdsWarpper = styled.div`\n  width: 50%;\n  min-width: 42rem;\n  height: 200px;\n  margin: 0 auto;\n  padding: 10px;\n  /* background-color: azure; */\n`;\n\nfunction AdsWrapper() {\n  return (\n    <AdsWarpper>\n      {/* 광고 */}\n      <img src={adImage} alt=\"logoImage\" />\n    </AdsWarpper>\n  );\n}\n\nexport default AdsWrapper;\n","import styled from \"styled-components\";\n\nconst ListWarpper = styled.div`\n\twidth: 70%;\n\tmin-width: 42rem;\n\theight: 200px;\n\tmargin: 10px auto auto auto;\n\tbackground-color: khaki;\n`;\n\nfunction ToonListWrapper() {\n\n\treturn (\n\t\t<>\n\t\t\t<ListWarpper>\n\t\t\t\t\n\t\t\t</ListWarpper>\n\t\t</>\n\t)\n}\n\nexport default ToonListWrapper;","export default __webpack_public_path__ + \"static/media/first-slide-image.26aaefef.png\";","export default __webpack_public_path__ + \"static/media/second-slide-image.88d9556d.gif\";","export default __webpack_public_path__ + \"static/media/third-slide-image.577358e7.gif\";","import styled from \"styled-components\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { ChevronRightIcon, ChevronLeftIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/react\";\nimport \"../styles/mainSlideStyle.scss\";\nimport FirstImage from \"../image/first-slide-image.png\";\nimport SecondImage from \"../image/second-slide-image.gif\";\nimport ThirdImage from \"../image/third-slide-image.gif\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 90rem;\n  height: 18.75rem;\n  margin: 0 auto;\n  background-color: teal;\n  /* div {\n    width: 100%;\n    height: 100%;\n  } */\n  /* 슬라이드 화살표 마우스오버 효과 */\n  .css-onkibi:hover {\n    color: black;\n  }\n  .slick-dots {\n    bottom: 15px;\n    .slick-active button {\n      opacity: 1;\n      &:before {\n        color: #f2663b;\n        opacity: 1;\n      }\n    }\n    li button {\n      &:hover {\n        &:before {\n          opacity: 1;\n          color: #f2663b;\n        }\n      }\n    }\n  }\n`;\n\nexport const MainSilde = () => {\n  const CustomRightArrow = (props) => {\n    const { className, style, onClick } = props;\n    return (\n      <ChevronRightIcon\n        className={className}\n        style={{\n          ...style,\n          width: \"100px\",\n          height: \"100px\",\n          right: \"10px\",\n          opacity: \"0.5\",\n          cursor: \"pointer\",\n          zIndex: \"100\",\n        }}\n        onClick={onClick}\n      />\n    );\n  };\n\n  const CustomLeftArrow = (props) => {\n    const { className, style, onClick } = props;\n    return (\n      <ChevronLeftIcon\n        className={className}\n        style={{\n          ...style,\n          width: \"100px\",\n          height: \"100px\",\n          left: \"10px\",\n          opacity: \"0.5\",\n          cursor: \"pointer\",\n          zIndex: \"100\",\n        }}\n        onClick={onClick}\n      />\n    );\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    nextArrow: <CustomRightArrow />,\n    prevArrow: <CustomLeftArrow />,\n    // autoplay: true,\n    // autoplaySpeed: 2000,\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Slider {...settings}>\n          <div className=\"FirstSlide\">\n            <div className={\"cover-left\"}>\n              <div className={\"comment-wrapper\"}>\n                <div className={\"comment-title\"}>\n                  공부하다 막히면 <br />\n                  커뮤니티에 물어보세요!\n                </div>\n                <div className={\"comment-sub\"}>\n                  #공부 #golang #react <br />\n                  #여러가지 #이것저것 #아리랑\n                </div>\n              </div>\n            </div>\n            <div className={\"cover-right\"}>\n              <img src={FirstImage} alt=\"logoImage\" />\n            </div>\n          </div>\n          <div className=\"SecondSlide\">\n            <div className={\"cover-left\"}>\n              <div className={\"comment-wrapper\"}>\n                <Badge px=\"3\" fontSize=\"1rem\" colorScheme=\"purple\">\n                  큐레이션\n                </Badge>\n                <div className={\"comment-title\"}>\n                  프로그래밍 입문자라면 주목!\n                </div>\n                <div className={\"comment-sub\"}>\n                  누구에게나 열려 있고, <br />\n                  누구나 참여 가능한 코딩의 세계\n                </div>\n              </div>\n            </div>\n            <div className={\"cover-right\"}>\n              <img src={SecondImage} alt=\"logoImage\" />\n            </div>\n          </div>\n          <div className=\"ThirdSlide\">\n            <div className={\"cover-left\"}>\n              <div className={\"comment-wrapper\"}>\n                <Badge px=\"3\" fontSize=\"1rem\" colorScheme=\"purple\">\n                  save\n                </Badge>\n                <div className={\"comment-title\"}>\n                  지금 <br />\n                  할인 중인 웹툰\n                </div>\n                <div className={\"comment-sub\"}>\n                  지금 할인 중인 웹툰을 확인하세요. <br />\n                  당장 오늘 마감이 될 수도 있어요!\n                </div>\n              </div>\n            </div>\n            <div className={\"cover-right\"}>\n              <img src={ThirdImage} alt=\"logoImage\" />\n            </div>\n          </div>\n        </Slider>\n      </Wrapper>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/thumb1.f51f8667.PNG\";","export default __webpack_public_path__ + \"static/media/thumb2.0fc2c150.PNG\";","export default __webpack_public_path__ + \"static/media/thumb3.a060d1d8.PNG\";","import styled from \"styled-components\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Badge } from \"@chakra-ui/react\";\nimport thumbnail1 from \"../image/thumb1.PNG\";\nimport thumbnail2 from \"../image/thumb2.PNG\";\nimport thumbnail3 from \"../image/thumb3.PNG\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 80rem;\n  height: auto;\n  min-height: 25rem;\n  margin: 50px auto;\n  /* background: honeydew; */\n  .title {\n    width: 90%;\n    height: 50px;\n    margin: 0 auto;\n    line-height: 50px;\n    font-family: NotoSans-Bold;\n    font-size: 20px;\n  }\n  .menu-wrapper {\n    width: 90%;\n    height: 350px;\n    margin: 0 auto;\n    /* background: hotpink; */\n    div {\n      height: 100%;\n    }\n    .menu-card {\n      width: 95% !important;\n      height: 90%;\n      background: white;\n      margin: 15px 5px 10px 5px;\n      box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n      border-radius: 10px;\n      display: inline-grid !important;\n      grid-template-rows: 2fr 1fr;\n      grid-template-areas: \"thumbnail-zone\" \"context-zone\";\n      .thumbnail-zone {\n        grid-area: \"thumbnail-zone\";\n        background-color: aliceblue;\n        border-top-left-radius: 10px;\n        border-top-right-radius: 10px;\n        overflow: hidden;\n        img {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n      }\n      .context-zone {\n        width: 100%;\n        grid-area: \"context-zone\";\n        background-color: white;\n        border-bottom-left-radius: 10px;\n        border-bottom-right-radius: 10px;\n        overflow: hidden;\n        .context-title {\n          width: 100%;\n          height: 30px;\n          /* min-height: 30%; */\n          margin: 10px auto auto auto;\n          padding: 0 0 0 10px;\n          font-family: NotoSans-Medium;\n          font-size: 15px;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          white-space: nowrap;\n        }\n        .context-info {\n          font-size: 13px;\n          padding: 0 0 0 10px;\n          height: auto;\n          .scoure {\n            float: right;\n            margin-right: 15px;\n          }\n        }\n        .alert-zone {\n          margin-top: 10px;\n          padding: 0 0 0 10px;\n          height: auto;\n          span {\n            margin-right: 10px;\n          }\n        }\n      }\n    }\n    /* .flex-wrapper {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tdisplay: inline-flex;\n\t\t\tjustify-content: space-between;\n\t\t\t.menu-card {\n\t\t\t\twidth: calc(95% / ${(props) => props.viewCardCount} );\n\t\t\t\theight: 100%;\n\t\t\t\tbackground: indianred;\n\t\t\t}\n\t\t} */\n  }\n`;\n\nexport const ListBlock = (props) => {\n  const { title, viewCardCount } = props;\n\n  const settings = {\n    dots: false,\n    // arrow: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: viewCardCount,\n    slidesToScroll: 2,\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <section>\n          <div className={\"title\"}>{title}</div>\n          <div className={\"menu-wrapper\"}>\n            {/* viewCardCount로  */}\n            <Slider {...settings}>\n              <div className={\"menu-card\"}>\n                <div className={\"thumbnail-zone\"}>\n                  <img src={thumbnail1} alt=\"logoImage\" />\n                </div>\n\n                <div className={\"context-zone\"}>\n                  <div className={\"context-title\"}>문과 감성 파이썬</div>\n                  <div className={\"context-info\"}>\n                    거미\n                    <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                  </div>\n                  <div className={\"alert-zone\"}>\n                    <Badge colorScheme=\"green\">new</Badge>\n                    <Badge colorScheme=\"red\">HOT</Badge>\n                  </div>\n                </div>\n              </div>\n\n              <div className={\"menu-card\"}>\n                <div className={\"thumbnail-zone\"}>\n                  <img src={thumbnail2} alt=\"logoImage\" />\n                </div>\n\n                <div className={\"context-zone\"}>\n                  <div className={\"context-title\"}>\n                    react를 이용한 youtube클론 사이트 만들기\n                  </div>\n                  <div className={\"context-info\"}>\n                    진우\n                    <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                  </div>\n                  <div className={\"alert-zone\"}>\n                    <Badge colorScheme=\"green\">new</Badge>\n                    <Badge colorScheme=\"red\">HOT</Badge>\n                  </div>\n                </div>\n              </div>\n              <div className={\"menu-card\"}>\n                <div className={\"thumbnail-zone\"}>\n                  <img src={thumbnail3} alt=\"logoImage\" />\n                </div>\n\n                <div className={\"context-zone\"}>\n                  <div className={\"context-title\"}>알고리즘 첫걸음</div>\n                  <div className={\"context-info\"}>\n                    일리닛\n                    <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                  </div>\n                  <div className={\"alert-zone\"}>\n                    <Badge colorScheme=\"green\">new</Badge>\n                    <Badge colorScheme=\"red\">HOT</Badge>\n                  </div>\n                </div>\n              </div>\n              <div className={\"menu-card\"}>\n                <div className={\"thumbnail-zone\"}>\n                  <img src={thumbnail1} alt=\"logoImage\" />\n                </div>\n\n                <div className={\"context-zone\"}>\n                  <div className={\"context-title\"}>문과 감성 파이썬 시즌2</div>\n                  <div className={\"context-info\"}>\n                    거미\n                    <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                  </div>\n                  <div className={\"alert-zone\"}>\n                    <Badge colorScheme=\"green\">new</Badge>\n                    <Badge colorScheme=\"red\">HOT</Badge>\n                  </div>\n                </div>\n              </div>\n            </Slider>\n          </div>\n        </section>\n      </Wrapper>\n    </>\n  );\n};\n","import Header from \"../layout/header\";\n// import Body from '../layout/body';\nimport Footer from \"../layout/footer\";\nimport AdsWrapper from \"../components/adsWrapper\";\nimport ToonListWrapper from \"../components/toonListWrapper\";\n// import BodyInnerWrapper from '../components/bodyInnerWrapper';\nimport { MainSilde } from \"components/mainSlide\";\nimport { ListBlock } from \"components/listBlock\";\n\nfunction MainPage() {\n  return (\n    <>\n      <Header />\n      <div className={\"body-layout\"}>\n        <MainSilde />\n        <ListBlock title={\"새로운 학습만화\"} viewCardCount={4} />\n        <ListBlock title={\"베스트 모음\"} viewCardCount={3} />\n        <AdsWrapper />\n        <ListBlock title={\"추천 학습만화\"} viewCardCount={4} />\n        {/* <ToonListWrapper /> */}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default MainPage;\n","export default __webpack_public_path__ + \"static/media/test-webtoon.baa3f883.jpeg\";","import React, { useReducer, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n// import { defaultValue } from 'model/lecture.model';\n\n\nconst initialState = {\n\terror: false,\n\tloading: false,\n\tentities: [{\n    user_id: \"\",\n    day: \"\",\n    title: \"\",\n    thumbnail_path: \"\",\n    context: \"\",\n    toon_sid: 0,\n  }],\n}\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_LIST\":\n      return {\n        ...state,\n        entities: action.payload,\n\t\t\t\tloading: true\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\nconst ComicsListStateContext = createContext(initialState);\nconst ComicsListDispatchcontext = createContext(null);\n\nexport function useStateComicsList() {\n  return useContext(ComicsListStateContext);\n}\n\nexport function useDispatchComicsList() {\n  return useContext(ComicsListDispatchcontext);\n}\n\nexport const ComicsListProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <ComicsListStateContext.Provider value={state}>\n      <ComicsListDispatchcontext.Provider value={dispatch}>\n        {children}\n      </ComicsListDispatchcontext.Provider>\n    </ComicsListStateContext.Provider>\n  );\n}\n\nexport async function getList(dispatch) {\n  try {\n    const response = await axios.get(\"/api/toon/gettoons\");\n\t\t\n    console.log(\"get comic list \", response.data);\n    if (response.data) {\n      dispatch({ type: \"GET_LIST\", payload: response.data.toons });\n    }\n  } catch (e) {\n    //dispatch({ type: \"GET_DATA_FAIL\", error: e });\n    console.log(e);\n  }\n}\n\n","import styled from \"styled-components\";\nimport { Text } from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\nimport testImage from \"image/test-webtoon.jpeg\";\nimport {\n  getList,\n  useDispatchComicsList,\n  useStateComicsList,\n} from \"contextAPI/comics\";\nimport { useEffect } from \"react\";\nimport { Badge } from \"@chakra-ui/react\";\n\nconst ItemCard = styled.li`\n  width: calc((100% - 7rem) / 5);\n  @media (max-width: 970px) {\n    width: calc((100% - 6rem) / 4);\n  }\n  @media (max-width: 760px) {\n    width: calc((100% - 4rem) / 3);\n  }\n  height: calc((100vw - 7rem) / 5 + 80px);\n  margin: 0 20px 30px 0;\n  display: inline-block;\n  .menu-card {\n    width: 95% !important;\n    height: 90%;\n    background: white;\n    margin: 15px 5px 10px 5px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    border-radius: 10px;\n    display: inline-grid !important;\n    grid-template-rows: 2fr 1fr;\n    grid-template-areas: \"thumbnail-zone\" \"context-zone\";\n    .thumbnail-zone {\n      grid-area: \"thumbnail-zone\";\n      background-color: aliceblue;\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n      overflow: hidden;\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n    .context-zone {\n      width: 100%;\n      grid-area: \"context-zone\";\n      background-color: white;\n      border-bottom-left-radius: 10px;\n      border-bottom-right-radius: 10px;\n      overflow: hidden;\n      .context-title {\n        width: 100%;\n        height: 30px;\n        /* min-height: 30%; */\n        margin: 10px auto auto auto;\n        padding: 0 0 0 10px;\n        font-family: NotoSans-Medium;\n        font-size: 15px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n      .context-info {\n        font-size: 13px;\n        padding: 0 0 0 10px;\n        height: auto;\n        .scoure {\n          float: right;\n          margin-right: 15px;\n        }\n      }\n      .alert-zone {\n        margin-top: 10px;\n        padding: 0 0 0 10px;\n        height: auto;\n        span {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n`;\n\nexport default function Toon(props) {\n  const { currentDay } = props;\n\n  const comicsState = useStateComicsList();\n  const comicsDispatch = useDispatchComicsList();\n\n  // const list = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]\n\n  useEffect(() => {\n    getList(comicsDispatch);\n  }, []);\n\n  const allList = () => {\n    return (\n      <>\n        {comicsState.entities &&\n          comicsState.entities.map((item) => (\n            <ItemCard key={\"all\"+item.toon_sid}>\n              <NavLink to={`/series/episode?toonId=${item.toon_sid}&name=${item.title}`}>\n                <div className={\"menu-card\"} key={\"all\"+item.toon_sid}>\n                  <div className={\"thumbnail-zone\"}>\n                    <img src={item.thumbnail_path} alt=\"logoImage\" />\n                    {item.thumbnail_path}\n                  </div>\n\n                  <div className={\"context-zone\"}>\n                    <div className={\"context-title\"}>{item.title}</div>\n                    <div className={\"context-info\"}>\n                      {item.context}\n                      <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                    </div>\n                    <div className={\"alert-zone\"}>\n                      <Badge colorScheme=\"green\">new</Badge>\n                      <Badge colorScheme=\"red\">HOT</Badge>\n                    </div>\n                  </div>\n                </div>\n              </NavLink>\n            </ItemCard>\n          ))}\n      </>\n    );\n  };\n\n  const dayFilterList = () => {\n    return (\n      <>\n        {comicsState.entities &&\n          comicsState.entities\n            .filter((item) => item.day === currentDay)\n            .map((item) => (\n              <ItemCard key={\"filter\"+item.toon_sid}>\n                <NavLink to={`/series/episode?toonId=${item.toon_sid}`}>\n                  <div className={\"menu-card\"}>\n                    <div className={\"thumbnail-zone\"}>\n                      <img src={item.thumbnail_path} alt=\"logoImage\" />\n                    </div>\n\n                    <div className={\"context-zone\"}>\n                      <div className={\"context-title\"}>{item.title}</div>\n                      <div className={\"context-info\"}>\n                        {item.context}\n                        <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                      </div>\n                      <div className={\"alert-zone\"}>\n                        <Badge colorScheme=\"green\">new</Badge>\n                        <Badge colorScheme=\"red\">HOT</Badge>\n                      </div>\n                    </div>\n                  </div>\n                </NavLink>\n              </ItemCard>\n            ))}\n      </>\n    );\n  };\n\n  // 나중에 for, map으로 돌리면 됨\n  return <>{currentDay !== \"전체\" ? dayFilterList() : allList()}</>;\n}\n","import styled from 'styled-components';\nimport Toon from './toon';\n\nconst DivWrapper = styled.div`\n\theight: auto;\n\twidth: 90%;\n\tmargin: 0 auto;\n\tdisplay: table;\n\tpadding: 0 0 0 20px;\n`;\n\nconst Wrapper = styled.ul`\n\twidth: 100%;\n\t/* max-width: 75rem; */\n\theight: auto;\n\tmin-height: 600px;\n\t/* padding: 20px 0 20px 30px; */\n\tdisplay: inline-block;\n`;\n\nexport default function ToonList(props) {\n\n\tconst { currentDay } = props;\n\n\treturn (\n\t\t<DivWrapper>\n\t\t\t<Wrapper>\n\t\t\t\t<Toon currentDay={currentDay}/>\n\t\t\t</Wrapper>\n\t\t\t{/* pagination */}\n\t\t</DivWrapper>\n\t)\n}","import styled from 'styled-components';\nimport { Button } from '@chakra-ui/react';\n\nconst DayNavWrapper = styled.div`\n\twidth: 60%;\n\theight: 80px;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbutton {\n\t\tborder-radius: 20px;\n\t\twidth: 100px;\n\t\tmargin: 0 5px 0 5px;\n\t\t&:focus {\n\t\t\tborder: none;\n\t\t}\n\t}\n\t.active {\n\t\tbackground-color: #f2663d;\n\t\tborder: none;\n\t}\n`;\n\nexport const DayNav = (props) => {\n\n\tconst {\n\t\tcurrentDay,\n\t\tsetCurrentDay,\n\t\tdayList,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<DayNavWrapper>\n\t\t\t\t{dayList.map((item) => (\n\t\t\t\t\t<Button \n\t\t\t\t\t\tonClick={() => setCurrentDay(item)}\n\t\t\t\t\t\tclassName={currentDay === item ? \"active\" : \"\"} \n\t\t\t\t\t\tkey={item}\n\t\t\t\t\t>\n\t\t\t\t\t\t{item}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</DayNavWrapper>\n\t\t</>\n\t)\n}","import React, { useState } from \"react\";\nimport Header from \"../layout/header\";\nimport Footer from \"../layout/footer\";\nimport ToonList from \"../components/toonList\";\nimport { DayNav } from \"components/dayNav\";\n\nfunction SeriesPage() {\n  const [currentDay, setCurrentDay] = useState(\"전체\");\n  const dayList = [\"전체\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\n\n  return (\n    <>\n      <Header />\n      <div className={\"body-layout\"}>\n        <DayNav\n          currentDay={currentDay}\n          setCurrentDay={setCurrentDay}\n          dayList={dayList}\n        />\n        <ToonList currentDay={currentDay} />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default SeriesPage;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport styled from \"styled-components\";\nimport Logo from \"../image/logo.svg\";\nimport {\n  Input,\n  FormControl,\n  FormLabel,\n  Text,\n  Button,\n  InputRightElement,\n  InputGroup,\n} from \"@chakra-ui/react\";\nimport {\n  signinUser,\n  idCheck,\n  useStateUser,\n  useDispatchUser,\n} from \"contextAPI/user\";\n\nconst Wrapper = styled.div`\n  width: 50%;\n  min-width: 410px;\n  height: 100%;\n  margin: 0 auto;\n  background-color: white;\n  margin-bottom: 100px;\n`;\n\nconst FormWrapper = styled.div`\n  width: 70%;\n  margin: 0 auto;\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  height: 50px;\n  line-height: 50px;\n  font-size: 25px;\n`;\n\nexport default function RegisterForm() {\n  const userInfoState = useStateUser();\n  const userInfoDispatch = useDispatchUser();\n\n  const [userName, setUserName] = useState(\"\");\n  const [userPhone, setUserPhone] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordCheck, setUserPasswordCheck] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userAddress, setUserAddress] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleIdCheck = () => {\n    idCheck(userInfoDispatch, userId);\n  };\n\n  useEffect(() => {\n    console.log(\"idchek\", userInfoState.idCheck)\n    if(userInfoState.idCheckLoading){\n      if(userInfoState.idCheck === true){\n        alert(\"사용가능합니다.\");\n      } else {\n        alert(\"다른 아이디를 사용해주세요\");\n      }\n    }\n  }, [userInfoState.idCheck])\n\n  const handleSubmit = () => {\n    // if(userName === \"\"){\n    // \talert(\"name 입력\");\n    // \treturn null;\n    // }\n    // if(userId === \"\"){\n    // \talert(\"Id 입력\");\n    // \treturn null;\n    // }\n    // if(userPassword === \"\"){\n    // \talert(\"password 입력\");\n    // \treturn null;\n    // }\n    // if(userPasswordCheck === \"\"){\n    // \talert(\"password check 입력\");\n    // \treturn null;\n    // }\n    // if(userPhone=== \"\"){\n    // \talert(\"Phone 입력\");\n    // \treturn null;\n    // }\n    // if(userAddress === \"\"){\n    // \talert(\"address 입력\");\n    // \treturn null;\n    // }\n    // if(userEmail === \"\"){\n    // \talert(\"email 입력\");\n    // \treturn null;\n    // }\n    if(!!userInfoState.idCheck === false){\n      alert(\"아이디 중복을 확인해주세요\");\n      return null;\n    }\n    const userInfo = {\n      user_id: userId,\n      password: userPassword,\n      address: userAddress,\n      phone_number: userPhone,\n      persnal_basic_agree: false,\n      persnal_share_agree: false,\n      email: userEmail,\n      sms_agree: false,\n      email_agree: false,\n      name: userName,\n    };\n    if (userInfoState.idCheck) {\n      signinUser(userInfoDispatch, userInfo)\n      .then((result) => {\n        if(result.status){\n          alert(\"회원가입 축하드립니다.\")\n          history.push(\"/\")\n        }\n      });\n    }\n  };\n\n  // console.log(\"??\", userId)\n\n  return (\n    <>\n      <Wrapper>\n        <img\n          width=\"200px\"\n          height=\"100px\"\n          style={{ margin: \"0 auto 20px auto\", paddingTop: \"10px\" }}\n          src={Logo}\n          alt=\"logoImage\"\n        />\n        <Title>\n          <Text>회원가입</Text>\n        </Title>\n        <FormWrapper>\n          <FormControl isRequired>\n            <FormLabel>Name</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"name\"}\n              onChange={(e) => setUserName(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>ID</FormLabel>\n            <InputGroup>\n              <Input\n                className={\"input-margin-bottom\"}\n                placeholder={\"id\"}\n                onChange={(e) => setUserId(e.target.value)}\n              />\n              <Button onClick={() => handleIdCheck()}>중복확인</Button>\n            </InputGroup>\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>Password</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"password\"}\n              type={\"password\"}\n              onChange={(e) => setUserPassword(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>Password check</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"password check\"}\n              type={\"password\"}\n              onChange={(e) => setUserPasswordCheck(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>Phone</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"phone\"}\n              onChange={(e) => setUserPhone(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>Address</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"Address\"}\n              onChange={(e) => setUserAddress(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>E-mail</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"e-mail\"}\n              onChange={(e) => setUserEmail(e.target.value)}\n            />\n          </FormControl>\n          <Button onClick={handleSubmit}>가입</Button>\n        </FormWrapper>\n      </Wrapper>\n    </>\n  );\n}\n","import Header from '../layout/header';\nimport Footer from '../layout/footer';\nimport RegisterForm from '../components/registerForm';\n\n\nfunction RegisterPage() {\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<div className={\"body-layout\"}>\n\t\t\t\t<RegisterForm/>\n\t\t\t</div>\n\t\t\t<Footer/>\n\t\t</>\n\t)\n}\n\nexport default RegisterPage;","import styled from \"styled-components\";\nimport testImage from \"../image/test-webtoon.jpeg\";\nimport { Text, Button } from \"@chakra-ui/react\";\nimport { NavLink } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 45rem;\n  margin: 0 auto;\n  position: relative;\n  background-color: whitesmoke;\n`;\n\nconst InfoWrapper = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 100%;\n  margin-left: 50%;\n`;\n\nconst InfoTitle = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n  color: aliceblue;\n  width: 100%;\n  height: 30%;\n  padding-top: 30px;\n`;\n\nconst InfoStory = styled.div`\n  text-align: center;\n  width: 100%;\n  height: 20%;\n  margin-top: 10px;\n  color: aliceblue;\n  font-style: 20px;\n  font-weight: bold;\n`;\n\nconst ButtonWrapper = styled.div`\n  width: 20%;\n  margin: 5rem auto auto auto;\n`;\n\nexport const EpisodeHeader = (props) => {\n\n  const { toonId, episodeName } = props;\n  const storyText =\n    \"벨비는 드디어 꿈에 그리던 컴공과에 진학을 한다 하지만 자신의 상상과는 컴공과의 어려움에 부딪히고 공부를 시작하게 되는데...\";\n\n  return (\n    <>\n      <Wrapper>\n        <InfoWrapper>\n          <InfoTitle>\n            <h3>벨비의 개발일지</h3>\n          </InfoTitle>\n          <InfoStory>\n            <Text>{storyText}</Text>\n          </InfoStory>\n          <ButtonWrapper>\n            <NavLink to={`/series/episode/view?toonId=${toonId}`}>\n              <Button>첫화보기</Button>\n            </NavLink>\n          </ButtonWrapper>\n        </InfoWrapper>\n        <img src={testImage} alt={\"testImage\"} style={{ borderRadius: \"2%\" }} />\n      </Wrapper>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nconst EpisodeItemWrapper = styled.li`\n  width: 100%;\n  height: 100px;\n  margin-bottom: 6px;\n  padding-bottom: 6px;\n  display: inline-flex;\n  border-bottom: 1px solid #f2663b;\n`;\n\nconst ImageZone = styled.div`\n  width: 100px;\n  height: 100%;\n  > img {\n    height: 100%;\n  }\n  background-color: bisque;\n`;\n\nconst ContentZone = styled.div`\n  width: calc(100% - 100px);\n  height: 100%;\n  padding: 5px;\n`;\n\nconst EpisodeName = styled.div`\n  width: 100%;\n  height: 20px;\n  margin-top: 10px;\n  padding-left: 0.4rem;\n`;\n\nconst EpisodeTitle = styled.div`\n  width: 100%;\n  height: 30px;\n  padding-left: 1rem;\n  font-size: 20px;\n`;\n\nconst EpisodeUploadDate = styled.div`\n  width: 100%;\n  height: 20px;\n  text-align: right;\n`;\n\nexport const EpisodeItem = (props) => {\n  const { id, name, title, thumbNail, context, uploadDate } = props;\n\n  console.log(\"series episode path\", thumbNail)\n\n  return (\n    <>\n      <EpisodeItemWrapper>\n        <ImageZone>\n          <img\n            src={thumbNail}\n            alt={\"\"}\n          />\n          {/* <img src={require(image).default} alt={\"\"}/> */}\n        </ImageZone>\n        <ContentZone>\n          <EpisodeName>{name}</EpisodeName>\n          <EpisodeTitle>{title}</EpisodeTitle>\n          <EpisodeUploadDate>{uploadDate}</EpisodeUploadDate>\n        </ContentZone>\n      </EpisodeItemWrapper>\n    </>\n  );\n};\n","import React, { useReducer, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n// import { defaultValue } from 'model/lecture.model';\n\n\nconst initialState = {\n\terror: false,\n\tloading: false,\n\tentities: [{\n\t\tepisode: 0,\n    episode_name: \"\",\n\t\tthumbnail_path: \"\",\n\t\tviews: 0,\n\t\ttoon_sid: 0,\n\t\tcreate_at: \"\",\n  }],\n}\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_LIST\":\n      return {\n        ...state,\n        entities: action.payload,\n\t\t\t\tloading: true\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\nconst EpisodeListStateContext = createContext(initialState);\nconst EpisodeListDispatchcontext = createContext(null);\n\nexport function useStateEpisodeList() {\n  return useContext(EpisodeListStateContext);\n}\n\nexport function useDispatchEpisodeList() {\n  return useContext(EpisodeListDispatchcontext);\n}\n\nexport const EpisodeListProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <EpisodeListStateContext.Provider value={state}>\n      <EpisodeListDispatchcontext.Provider value={dispatch}>\n        {children}\n      </EpisodeListDispatchcontext.Provider>\n    </EpisodeListStateContext.Provider>\n  );\n}\n\nexport async function getList(dispatch, toonId) {\n  try {\n    const response = await axios.post(\n\t\t\t\"/api/toon/getepisodes\", \n\t\t\t{toon_sid: parseInt(toonId)}\n\t\t);\n\t\t\n    console.log(\"get epidsode list \", response.data);\n    if (response.data) {\n      dispatch({ type: \"GET_LIST\", payload: response.data.episodes_info });\n    }\n  } catch (e) {\n    //dispatch({ type: \"GET_DATA_FAIL\", error: e });\n    console.log(e);\n  }\n}\n\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nimport { EpisodeItem } from \"./episodeItem\";\nimport { \n  getList as getEpisodeList, \n  useStateEpisodeList, \n  useDispatchEpisodeList\n} from 'contextAPI/episode';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 45.25rem;\n  margin: 0 auto;\n  /* background-color: whitesmoke; */\n`;\n\nconst EpisodeListBlock = styled.ul`\n  width: 100%;\n  margin: 10px auto;\n  list-style: none;\n`;\n\nexport const EpisodeList = (props) => {\n\n  const { toonId, episodeName } = props;\n\n  const episodeListState = useStateEpisodeList();\n  const episodeListDispatch = useDispatchEpisodeList();\n\n  useEffect(() => {\n    getEpisodeList(episodeListDispatch, toonId)\n  }, [toonId])\n\n  return (\n    <>\n      <Wrapper>\n        <EpisodeListBlock>\n          {episodeListState.entities &&\n            episodeListState.entities.map((item) => (\n            <NavLink\n              key={item.id}\n              to={`/series/episode/view?toonId=${item.toon_sid}&name=${item.episode_name}`}\n            >\n              <EpisodeItem\n                key={item.episode_name}\n                id={item.episode_name}\n                name={episodeName}\n                title={item.episode_name}\n                thumbNail={item.thumbnail_path}\n                context={\"context\"}\n                uploadDate={item.create_at.substr(0,10)}\n              />\n            </NavLink>\n          ))}\n        </EpisodeListBlock>\n      </Wrapper>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport queryString from 'query-string'\n\nimport Header from '../layout/header';\nimport Footer from '../layout/footer';\nimport {EpisodeHeader} from '../components/episodeHeader';\nimport {EpisodeList} from '../components/episodeList';\n\nfunction EpisodePage() {\n\n\tconst [toonId, setToonId] = useState(queryString.parse(window.location.search).toonId || \"\");\n  const [episodeName, setEpisodeName] = useState(queryString.parse(window.location.search).name || \"\");\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<div className={\"body-layout\"}>\n\t\t\t\t<EpisodeHeader toonId={toonId} episodeName={episodeName}/>\n\t\t\t\t<EpisodeList toonId={toonId} episodeName={episodeName}/>\n\t\t\t</div>\n\t\t\t<Footer/>\n\t\t</>\n\t)\n}\n\nexport default EpisodePage;","import { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport { ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons';\n\nconst HeaderWrapper = styled.div`\n\twidth: 100%;\n\theight: 4.375rem;\n\tbackground-color: beige;\n\tposition: fixed;\n\t.toon-info {\n\t\tdisplay: inline-flex;\n\t\theight: 100%;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\t.back-button {\n\t\t\twidth: 5rem;\n\t\t\theight: 100%;\n\t\t\ttext-align: center;\n\t\t\tline-height: 4rem;\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t.toon-title {\n\t\t\tdisplay: inline-block;\n\t\t\tfont-size: 20px;\n\t\t}\n\t\t.toon-episode-name {\n\t\t\tdisplay: inline-block;\n\t\t\tfont-size: 20px;\n\t\t}\n\t}\n`;\n\nexport const ViewHeader = (props) => {\n\n\tconst { toonId, name, viewHeaderUI } = props\n\n\tconst history = useHistory();\n\n\tconst handleGoBack = () => {\n\t\thistory.goBack();\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<HeaderWrapper \n\t\t\t\tstyle={{display: viewHeaderUI ? \"\" : \"none\"}}\n\t\t\t>\n\t\t\t\t<div className={\"toon-info\"}>\n\t\t\t\t\t<div className={\"back-button\"} onClick={handleGoBack}>\n\t\t\t\t\t\t<ChevronLeftIcon w={10} h={10}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={\"toon-title\"} >{toonId}</div>\n\t\t\t\t\t\t<ChevronRightIcon w={8} h={8} color={\"#aaaaaa\"}/>\n\t\t\t\t\t<div className={\"toon-episode-name\"} >{name}</div>\n\t\t\t\t</div>\n\t\t\t</HeaderWrapper>\n\t\t</>\n\t)\n}\n\n","import React, { useReducer, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n// import { defaultValue } from 'model/lecture.model';\n\n\nconst initialState = {\n\terror: false,\n\tloading: false,\n\tentity: {\n\t\tthumbnail_path: \"\",\n\t\ttoon_context: [],\n\t\tusercomments: [{\n\t\t\tuser_id: \"\",\n\t\t\tcommnet: \"\",\n\t\t\tgood: 0,\n\t\t\tbad: 0\n\t\t}]\n\t},\n}\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_EPISODE_IMAGE\":\n      return {\n        ...state,\n        entity: action.payload,\n\t\t\t\tloading: true\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\nconst EpisodeImageStateContext = createContext(initialState);\nconst EpisodeImageDispatchcontext = createContext(null);\n\nexport function useStateEpisodeImage() {\n  return useContext(EpisodeImageStateContext);\n}\n\nexport function useDispatchEpisodeImage() {\n  return useContext(EpisodeImageDispatchcontext);\n}\n\nexport const EpisodeImageProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <EpisodeImageStateContext.Provider value={state}>\n      <EpisodeImageDispatchcontext.Provider value={dispatch}>\n        {children}\n      </EpisodeImageDispatchcontext.Provider>\n    </EpisodeImageStateContext.Provider>\n  );\n}\n\nexport async function getEpisodeImage(dispatch, toonId, episodeName) {\n  try {\n    const response = await axios.post(\n\t\t\t\"/api/toon/dotoon\", \n\t\t\t{\n\t\t\t\tuser_id: \"\",\n\t\t\t\ttoon_sid: parseInt(toonId),\n\t\t\t\tepisode_name: episodeName,\n\t\t\t}\n\t\t);\n\t\t\n    console.log(\"get epidsode image \", response.data);\n    if (response.data) {\n      dispatch({ type: \"GET_EPISODE_IMAGE\", payload: response.data });\n    }\n  } catch (e) {\n    //dispatch({ type: \"GET_DATA_FAIL\", error: e });\n    console.log(e);\n  }\n}\n\n","import styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport { \n\tgetEpisodeImage, \n\tuseStateEpisodeImage, \n\tuseDispatchEpisodeImage\n} from 'contextAPI/episodeImg';\n\nconst Body= styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tpadding-top: ${props => props.viewHeaderUI ? \"4.375rem\" : \"0\"};\n\t/* background-color: brown; */\n`;\n\nconst BodyWrapper= styled.div`\n\twidth: 100%;\n\theight: 100%;\n\t/* background-color: brown; */\n\t@media(min-width: 720px){\n\t\twidth: 45rem;\n\t\tmargin: 0 auto;\n\t}\n\t>img {\n\t\twidth: 100%;\n\t}\n`;\n\nexport const ViewBody = (props) => {\n\n\tconst { viewHeaderUI, setViewHeaderUI, toonId, name } = props;\n\tconst episodeImageState = useStateEpisodeImage();\n\tconst episodeImageDispatch = useDispatchEpisodeImage();\n\n\tconst [scrollY, setScrollY] = useState(0);\n\n\tfunction logit() {\n\t\tsetScrollY(window.pageYOffset);\n\t\tif(window.pageYOffset === 0){\n\t\t\tsetViewHeaderUI(true)\n\t\t} else {\n\t\t\tsetViewHeaderUI(false);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfunction watchScroll() {\n\t\t\twindow.addEventListener(\"scroll\", logit);\n\t\t}\n\t\twatchScroll();\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\", logit);\n\t\t};\n\t});\n\n\tuseEffect(() => {\n\t\tgetEpisodeImage(episodeImageDispatch, toonId, name);\n\t},[toonId, name])\n\n\treturn (\n\t\t\t<Body \n\t\t\t\tonClick={() => setViewHeaderUI(!viewHeaderUI)}\n\t\t\t\tviewHeaderUI={viewHeaderUI}\n\t\t\t>\n\t\t\t\t<BodyWrapper>\n\t\t\t\t{\n\t\t\t\t\tepisodeImageState.entity.toon_context &&\n\t\t\t\t\tepisodeImageState.entity.toon_context.map((item) => (\n\t\t\t\t\t\t<img src={item} alt={\"\"} key={item}/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t\t</BodyWrapper>\n\t\t\t</Body>\n\t)\n}\n","import { useState } from 'react';\nimport styled from \"styled-components\";\nimport { ViewHeader } from \"components/viewHeader\";\nimport { ViewBody } from 'components/viewBody';\nimport queryString from \"query-string\";\n\nfunction ViewPage() {\n\n\t// const toonId = queryString.parse(location.search).toonId;\n\tconst [toonId, setToonId] = useState(queryString.parse(window.location.search).toonId);\n\tconst [name, setName] = useState(queryString.parse(window.location.search).name);\n\tconst [headerUI, setHeaderUI] = useState(true)\n\n\treturn (\n\t\t<>\n\t\t\t<ViewHeader toonId={toonId} name={name} viewHeaderUI={headerUI}/>\n\t\t\t<ViewBody \n\t\t\t\tviewHeaderUI={headerUI} \n\t\t\t\tsetViewHeaderUI={setHeaderUI}\n\t\t\t\ttoonId={toonId}\n\t\t\t\tname={name}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport default ViewPage;","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Input, Select, Textarea, Button, Stack } from '@chakra-ui/react';\nimport { useStateUser } from 'contextAPI/user';\n\nconst Wrapper = styled.div`\n\twidth: 30%;\n\theight: 31.25rem;\n\tmargin: 10px auto;\n\t.file-view {\n\t\twidth: calc(100% - 65px);\n\t\theight: 40px;\n\t\ttext-overflow: ellipsis;\n\t}\n\t.title {\n\t\ttext-align: center;\n\t\tfont-size: 30px;\n\t}\n\tlabel {\n\t\tcursor: pointer;\n\t\tmargin: 0 auto;\n\t\t/* border: 1px solid black; */\n\t\tborder-radius: 5px;\n\t\tbackground-color: #1aacac;\n\t\tpadding: 10px;\n\t\theight: 40px;\n\t}\n\tinput[type=file]{\n\t\tdisplay: none;\n\t}\n`;\n\nexport const RegistCartoon = () => {\n\n\tconst [imgBase64, setImgBase64] = useState([]); // 파일 base64\n \tconst [imgFile, setImgFile] = useState(null);\t//파일\n\tconst [fileView, setFileView] = useState();\n\tconst [webToonUploadDay, setWebToonUploadDay] = useState();\n\tconst [title, setTitle] = useState();\n\tconst [summary, setSummary] = useState();\n\tconst [genre, setGenre] = useState();\n\tconst userState = useStateUser();\n\tconst history = useHistory();\n\n\tconst day = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"]\n\tconst genreList = [\"액션\", \"로맨스\", \"드라마\", \"스릴러\"]\n\n\tconst handleChangeFile = (event) => {\n    console.log(event.target.files)\n    setImgFile(event.target.files);\n    //fd.append(\"file\", event.target.files)\n    setImgBase64([]);\n    for(let i=0;i<event.target.files.length;i++){\n\t\t\tif (event.target.files[i]) {\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.readAsDataURL(event.target.files[i]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\t\t\t\t// 파일 상태 업데이트\n\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t// 2. 읽기가 완료되면 아래코드가 실행됩니다.\n\t\t\t\t\tconst base64 = reader.result;\n\t\t\t\t\t// console.log(base64)\n\t\t\t\t\tif (base64) {\n\t\t\t\t\t//  images.push(base64.toString())\n\t\t\t\t\tconst base64Sub = base64.toString()\n\t\t\t\t\t\t\n\t\t\t\t\tsetImgBase64(imgBase64 => [...imgBase64, base64Sub]);\n\t\t\t\t\t//  setImgBase64(newObj);\n\t\t\t\t\t\t// 파일 base64 상태 업데이트\n\t\t\t\t\t//  console.log(images)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n  \t}\n\n  }\n\n\tuseEffect(() => {\n\t\tconst imgValue = () => {\n\t\t\tif(imgFile){\n\t\t\t\tif(imgFile.length === 1) {\n\t\t\t\t\treturn imgFile[0].name;\n\t\t\t\t} else if(imgFile.length === 0) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t} else {\n\t\t\t\t\treturn \"파일 \"+ imgFile.length+\"개\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetFileView(imgValue())\n\t}, [imgFile])\n\n\tconst WriteBoard = async()=> {\n    const fd = new FormData();\n    Object.values(imgFile).forEach((file) => fd.append(\"thumbnail_file\", file));\n\t\tfd.append(\"user_id\", userState.entity.user_id);\n\t\tfd.append(\"title\", title);\n\t\tfd.append(\"day\", webToonUploadDay);\n\t\tfd.append(\"pass\", true);\n\t\tfd.append(\"context\", summary);\n\t\tfd.append(\"genre\", genre);\n\n\n    await axios.post('/api/toon/regist', fd, {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": `multipart/form-data; `,\n\t\t\t}\n\t\t})\n\t\t.then((response) => {\n\t\t\tif(response.data){\n\t\t\t\tif(response.data.status){\n\t\t\t\t\thistory.push(\"/lecture\");\n\t\t\t\t}\n\t\t\t\t// history.push(\"/test1\");\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// 예외 처리\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Wrapper>\n\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t<div className={\"title\"}>강의 등록</div>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tplaceholder=\"강의 제목\" \n\t\t\t\t\t\tname={\"title\"} \n\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Select placeholder=\"연재일\" onChange={(e) => setWebToonUploadDay(e.target.value)}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tday.map((item) => (\n\t\t\t\t\t\t\t\t<option key={item} value={item}>{item}</option>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Select placeholder=\"장르\" onChange={(e) => setGenre(e.target.value)}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgenreList.map((item) => (\n\t\t\t\t\t\t\t\t<option key={item} value={item}>{item}</option>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Textarea placeholder=\"줄거리\" onChange={(e) => setSummary(e.target.value)}/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input className={\"file-view\"} placeholder=\" 파일 선택\" value={fileView} />\n\t\t\t\t\t\t<label htmlFor={\"file\"}>업로드</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tid=\"file\" \n\t\t\t\t\t\t\tname={\"thumbnail_file\"} \n\t\t\t\t\t\t\tonChange={handleChangeFile} \n\t\t\t\t\t\t\tmultiple=\"multiple\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* {imgBase64.map((item) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"d-block w-100\"\n\t\t\t\t\t\t\t\tsrc={item}\n\t\t\t\t\t\t\t\talt=\"First slide\"\n\t\t\t\t\t\t\t\tstyle={{width:\"100%\",height:\"550px\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}) } */}\n\t\t\t\t\t<Button onClick={WriteBoard}>작성완료</Button>\n\t\t\t\t</Stack>\n\t\t\t</Wrapper>\n\t\t</>\n\t)\n}","import { RegistCartoon } from 'components/registCartoon';\nimport Header from 'layout/header';\n\nfunction UploadPage() {\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<RegistCartoon/>\n\t\t</>\n\t)\n}\n\nexport default UploadPage;","import React, { useReducer, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n// import { defaultValue } from 'model/lecture.model';\n\n\nconst initialState = {\n\terror: false,\n\tloading: false,\n\tentities: [{\n    user_id: \"\",\n    day: \"\",\n    title: \"\",\n    thumbnail_path: \"\",\n    context: \"\",\n    toon_sid: 0,\n  }],\n}\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_LIST\":\n      return {\n        ...state,\n        entities: action.payload,\n\t\t\t\tloading: true\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\nconst LectureListStateContext = createContext(initialState);\nconst LectureListDispatchcontext = createContext(null);\n\nexport function useStateLectureList() {\n  return useContext(LectureListStateContext);\n}\n\nexport function useDispatchLectureList() {\n  return useContext(LectureListDispatchcontext);\n}\n\nexport const LectureListProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <LectureListStateContext.Provider value={state}>\n      <LectureListDispatchcontext.Provider value={dispatch}>\n        {children}\n      </LectureListDispatchcontext.Provider>\n    </LectureListStateContext.Provider>\n  );\n}\n\nexport async function getList(dispatch, userId) {\n  try {\n    const response = await axios.post(\n      \"/api/toon/getmytoon\",\n\t\t\t{ user_id: userId } //json object?\n    );\n    console.log(\"get my toon list \", userId, response.data);\n    if (response.data) {\n      dispatch({ type: \"GET_LIST\", payload: response.data.toons });\n    }\n  } catch (e) {\n    //dispatch({ type: \"GET_DATA_FAIL\", error: e });\n    console.log(e);\n  }\n}\n\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components';\nimport { useDispatchLectureList, useStateLectureList, getList as getLectureList } from 'contextAPI/lecture';\nimport { useStateUser } from 'contextAPI/user'\nimport { Button } from '@chakra-ui/react'\n\nconst Warpper = styled.div`\n\twidth: 90%;\n\theight: auto;\n\tmargin: 0 auto;\n\t.title {\n\t\twidth: 100%;\n\t\theight: 80px;\n\t\ttext-align: center;\n\t\tfont-size: 30px;\n\t\tfont-weight: bold;\n\t\tpadding: 20px;\n\t}\n\n\t.card {\n\t\twidth: calc((100% - 80px) / 4);\n\t\theight: calc((100vw - 20px) / 4);\n\t\tmin-height: 150px;\n\t\tdisplay: inline-block;\n\t\tmargin-left: 20px;\n\t\tmargin-bottom: 20px;\n\t\tbox-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\t\tbackground-color: #E2E8F0;\n\t\tborder-radius: 10px;\n\t\timg {\n\t\t\twidth: 100%;\n\t\t\t/* 아래 그리드 비율에서 이미지의 비율을 곱한다 */\n\t\t\theight: calc(((100vw - 20px) / 4) / 4.5 * 2.5);\n\t\t\tborder-top-left-radius: 10px;\n\t\t\tborder-top-right-radius: 10px;\n\t\t}\n\t\tdisplay: inline-grid;\n\t\tgrid-template-rows: 2.5fr 1fr 1fr;\n\t\tgrid-template-areas: \"thumbnail-zone\" \"content-zone\" \"button-zone\";\n\t\t.thumbnail-zone{\n\t\t\tgrid-area: \"thumbnail-zone\";\n\n\t\t}\n\t\t.content-zone{\n\t\t\tgrid-area: \"content-zone\";\n\t\t\tpadding: 10px;\n\t\t\t.content-title {\n\t\t\t\tfont-size: 21px;\n\t\t\t}\n\t\t\t.content-context {\n\t\t\t\tfont-size: 12px;\n\t\t\t}\n\t\t}\n\t\t.button-zone{\n\t\t\tgrid-area: \"button-zone\";\n\t\t\tborder-radius: 10px;\n\t\t\twidth: 50%;\n\t\t\tmargin: 10px auto auto auto;\n\t\t\tbackground-color: #f1977b;\n\t\t}\n\t}\n\n\t.regist-button {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tmargin-bottom: 10px;\n\t}\n\n`;\n\nexport const LectureList = () => {\n\n\tconst history = useHistory();\n\tconst userState = useStateUser();\n\tconst lectureListState = useStateLectureList();\n\tconst lectureListDispatch = useDispatchLectureList();\n\n\tuseEffect(() => {\n\t\tgetLectureList(lectureListDispatch, userState.entity.user_id)\n\t}, [userState.entity.user_id])\n\n\tconst goRegistPage = (toonId) => {\n\t\thistory.push(`/series/episode/upload?toonId=${toonId}`)\n\t}\n\n\tconst lectureCard = (state) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{state.entities && \n\t\t\t\t\tstate.entities.map((item) => (\n\t\t\t\t\t\t<div key={item.toon_sid} className={\"card\"}>\n\t\t\t\t\t\t\t<div className={\"thumbnail-zone\"}>\n\t\t\t\t\t\t\t\t<img src={item.thumbnail_path} alt={\"\"}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"content-zone\"}>\n\t\t\t\t\t\t\t\t<span className={\"content-title\"}>{item.title}</span>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<span className={\"content-context\"}>작품설명: {item.context}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Button onClick={() => goRegistPage(item.toon_sid)} className={\"button-zone\"}>새 회차 등록</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst goRegistToonPage = () => {\n\t\thistory.push(\"/upload\")\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Warpper>\n\t\t\t\t<div className={\"title\"}>\n\t\t\t\t\t내 작품\n\t\t\t\t</div>\n\t\t\t\t<div className={\"regist-button\"}>\n\t\t\t\t\t<Button onClick={goRegistToonPage}>새 작품 등록</Button>\n\t\t\t\t</div>\n\t\t\t\t{lectureCard(lectureListState)}\n\t\t\t</Warpper>\n\t\t</>\n\t)\n}","import Header from 'layout/header';\nimport Footer from 'layout/footer';\nimport { LectureList } from 'components/lectureList';\n\nfunction LectureListPage() {\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<div className={\"body-layout\"}>\n\t\t\t\t<LectureList/>\n\t\t\t</div>\n\t\t\t<Footer/>\n\t\t</>\n\t)\n}\n\nexport default LectureListPage;","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\nimport { Input, Select, Textarea, Button, Stack } from '@chakra-ui/react';\nimport { useStateUser } from 'contextAPI/user';\n\nconst Wrapper = styled.div`\n\twidth: 30%;\n\theight: 31.25rem;\n\tmargin: 10px auto;\n\t.file-view {\n\t\twidth: calc(100% - 65px);\n\t\theight: 40px;\n\t\ttext-overflow: ellipsis;\n\t}\n\t.title {\n\t\ttext-align: center;\n\t\tfont-size: 30px;\n\t}\n\t.sub-title {\n\t\ttext-align: left;\n\t\tfont-size: 20px;\n\t}\n\tlabel {\n\t\tcursor: pointer;\n\t\tmargin: 0 auto;\n\t\t/* border: 1px solid black; */\n\t\tborder-radius: 5px;\n\t\tbackground-color: #1aacac;\n\t\tpadding: 10px;\n\t\theight: 40px;\n\t}\n\tinput[type=file]{\n\t\tdisplay: none;\n\t}\n`;\n\nexport const RegistEpisode = () => {\n\n\tconst [imgBase64, setImgBase64] = useState([]); // 파일 base64\n \tconst [thumbnailFile, setThumbnailFile] = useState(null);\t//파일\n\tconst [episodeFile, setEpisodeFile] = useState(null);\n\tconst [thumbnailFileView, setThumbnailFileView] = useState();\n\tconst [episodeFileView, setEpisodeFileView] = useState();\n\tconst [title, setTitle] = useState();\n\tconst [toonId, setToonId] = useState(queryString.parse(window.location.search).toonId || null);\n\tconst [seriesName, setSeriesName] = useState(queryString.parse(window.location.search).seriesName || null);\n\tconst userState = useStateUser();\n\tconst history = useHistory();\n\n\tconst handleChangeFile = (event, type) => {\n    console.log(event.target.files)\n\t\tif(type === 1){\n\t\t\tsetThumbnailFile(event.target.files);\n\t\t} else if(type === 2){\n\t\t\tsetEpisodeFile(event.target.files);\n\t\t}\n    //fd.append(\"file\", event.target.files)\n    setImgBase64([]);\n    for(let i=0;i<event.target.files.length;i++){\n\t\t\tif (event.target.files[i]) {\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.readAsDataURL(event.target.files[i]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\t\t\t\t// 파일 상태 업데이트\n\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t// 2. 읽기가 완료되면 아래코드가 실행됩니다.\n\t\t\t\t\tconst base64 = reader.result;\n\t\t\t\t\t// console.log(base64)\n\t\t\t\t\tif (base64) {\n\t\t\t\t\t//  images.push(base64.toString())\n\t\t\t\t\tconst base64Sub = base64.toString()\n\t\t\t\t\t\t\n\t\t\t\t\tsetImgBase64(imgBase64 => [...imgBase64, base64Sub]);\n\t\t\t\t\t//  setImgBase64(newObj);\n\t\t\t\t\t\t// 파일 base64 상태 업데이트\n\t\t\t\t\t//  console.log(images)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n  \t}\n\n  }\n\n\tconst imgValue = (file) => {\n\t\tif(file){\n\t\t\tif(file.length === 1) {\n\t\t\t\treturn file[0].name;\n\t\t\t} else if(file.length === 0) {\n\t\t\t\treturn \"\";\n\t\t\t} else {\n\t\t\t\treturn \"파일 \"+ file.length+\"개\";\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetThumbnailFileView(imgValue(thumbnailFile))\n\t}, [thumbnailFile])\n\n\tuseEffect(() => {\n\t\tsetEpisodeFileView(imgValue(episodeFile))\n\t}, [episodeFile])\n\n\tconst WriteBoard = async()=> {\n    const fd= new FormData();\n    Object.values(thumbnailFile).forEach((file) => fd.append(\"thumbnail_files\", file));\n\t\tObject.values(episodeFile).forEach((file) => fd.append(\"toon_files\", file));\n\t\tfd.append(\"user_id\", userState.entity.user_id);\n\t\tfd.append(\"toon_sid\", toonId)\n\t\tfd.append(\"episode_name\", title);\n\n\n    await axios.post('/api/toon/upload', fd, {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": `multipart/form-data; `,\n\t\t\t}\n\t\t})\n\t\t.then((response) => {\n\t\t\tif(response.data){\n\t\t\t\tif(response.data.status){\n\t\t\t\t\thistory.push(\"/lecture\");\n\t\t\t\t}\n\t\t\t\t// history.push(\"/test1\");\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// 예외 처리\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Wrapper>\n\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t<div className={\"title\"}>에피소드 등록</div>\n\t\t\t\t\t<div className={\"sub-title\"}>시리즈: {seriesName}</div>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tplaceholder=\"에피소드 제목  ex) 1부 20화\" \n\t\t\t\t\t\tname={\"title\"} \n\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input className={\"file-view\"} placeholder=\" 섬네일 파일 선택\" defaultValue={thumbnailFileView || \"\"} />\n\t\t\t\t\t\t<label htmlFor={\"thumbnailFile\"}>업로드</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tid=\"thumbnailFile\" \n\t\t\t\t\t\t\tname={\"thumbnail_file\"} \n\t\t\t\t\t\t\tonChange={(event) => handleChangeFile(event, 1)} \n\t\t\t\t\t\t\tmultiple=\"multiple\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input className={\"file-view\"} placeholder=\" 에피소드 파일 선택\" defaultValue={episodeFileView || \"\"} />\n\t\t\t\t\t\t<label htmlFor={\"episodeFile\"}>업로드</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tid=\"episodeFile\" \n\t\t\t\t\t\t\tname={\"thumbnail_file\"} \n\t\t\t\t\t\t\tonChange={(event) => handleChangeFile(event, 2)} \n\t\t\t\t\t\t\tmultiple=\"multiple\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t{/* {imgBase64.map((item) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"d-block w-100\"\n\t\t\t\t\t\t\t\tsrc={item}\n\t\t\t\t\t\t\t\talt=\"First slide\"\n\t\t\t\t\t\t\t\tstyle={{width:\"100%\",height:\"550px\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}) } */}\n\t\t\t\t\t<Button onClick={WriteBoard}>작성완료</Button>\n\t\t\t\t</Stack>\n\t\t\t</Wrapper>\n\t\t</>\n\t)\n}","import Header from 'layout/header';\nimport Footer from 'layout/footer';\nimport { RegistEpisode } from 'components/registEpisode';\n\nfunction RegistEpisodePage() {\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<div className={\"body-layout\"}>\n\t\t\t\t<RegistEpisode/>\n\t\t\t</div>\n\t\t\t<Footer/>\n\t\t</>\n\t)\n}\n\nexport default RegistEpisodePage;","import { Route, Switch } from 'react-router-dom'\nimport MainPage from './pages/mainPage';\nimport SeriesPage from './pages/seriesPage';\nimport RegisterPage from './pages/registerPage';\nimport './App.scss';\nimport EpisodePage from './pages/episodePage';\nimport ViewPage from 'pages/viewPage';\nimport UploadPage from 'pages/uploadPage';\nimport LectureListPage from 'pages/lectureListPage';\nimport RegistEpisode from 'pages/registEpisodePage';\n\n\nfunction App() {\n  return (\n    <div className={\"App\"}>\n      <Switch>\n        <Route path=\"/\" exact component={MainPage}/>\n        <Route path=\"/series\" exact component={SeriesPage}/>\n        <Route path=\"/series/episode\" exact component={EpisodePage}/>\n        <Route path=\"/series/episode/upload\" exact component={RegistEpisode}/>\n        <Route path=\"/series/episode/view\" exact component={ViewPage}/>\n        <Route path=\"/register\" component={RegisterPage}/>\n        <Route path=\"/upload\" component={UploadPage}/>\n        <Route path=\"/lecture\" component={LectureListPage}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { UserProvider } from './contextAPI/user';\nimport { LectureListProvider } from 'contextAPI/lecture';\nimport { ComicsListProvider } from 'contextAPI/comics';\nimport { EpisodeListProvider } from 'contextAPI/episode';\nimport { EpisodeImageProvider } from 'contextAPI/episodeImg';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <UserProvider>\n        <LectureListProvider>\n          <ComicsListProvider>\n            <EpisodeListProvider>\n              <EpisodeImageProvider>\n                <ChakraProvider>\n                  <App />\n                </ChakraProvider>\n              </EpisodeImageProvider>\n            </EpisodeListProvider>\n          </ComicsListProvider>\n        </LectureListProvider>\n      </UserProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}