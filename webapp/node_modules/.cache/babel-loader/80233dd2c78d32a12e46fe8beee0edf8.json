{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import styled from\"styled-components\";import{NavLink}from\"react-router-dom\";import{useEffect}from\"react\";import{EpisodeItem}from\"./episodeItem\";import{getList as getEpisodeList,useStateEpisodeList,useDispatchEpisodeList}from'contextAPI/episode';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  max-width: 45.25rem;\\n  margin: 0 auto;\\n  /* background-color: whitesmoke; */\\n\"])));var EpisodeListBlock=styled.ul(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  margin: 10px auto;\\n  list-style: none;\\n\"])));export var EpisodeList=function EpisodeList(props){var toonId=props.toonId,episodeName=props.episodeName;var episodeListState=useStateEpisodeList();var episodeListDispatch=useDispatchEpisodeList();useEffect(function(){getEpisodeList(episodeListDispatch,toonId);},[toonId]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsx(EpisodeListBlock,{children:episodeListState.entities&&episodeListState.entities.map(function(item){return/*#__PURE__*/_jsx(NavLink,{to:\"/series/episode/view?toonId=\".concat(item.toon_sid,\"&name=\").concat(item.episode_name),children:/*#__PURE__*/_jsx(EpisodeItem,{id:item.episode_name,name:episodeName,title:item.episode_name,thumbNail:item.thumbnail_path,context:\"context\",uploadDate:item.create_at.substr(0,10)},item.episode_name)},item.id);})})})});};","map":{"version":3,"sources":["/Users/sa/dev/git/comicstack-backend/webapp/src/components/episodeList.js"],"names":["styled","NavLink","useEffect","EpisodeItem","getList","getEpisodeList","useStateEpisodeList","useDispatchEpisodeList","Wrapper","div","EpisodeListBlock","ul","EpisodeList","props","toonId","episodeName","episodeListState","episodeListDispatch","entities","map","item","toon_sid","episode_name","thumbnail_path","create_at","substr","id"],"mappings":"uNAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,OAASC,WAAT,KAA4B,eAA5B,CACA,OACEC,OAAO,GAAIC,CAAAA,cADb,CAEEC,mBAFF,CAGEC,sBAHF,KAIO,oBAJP,C,gGAMA,GAAMC,CAAAA,OAAO,CAAGR,MAAM,CAACS,GAAV,qKAAb,CAOA,GAAMC,CAAAA,gBAAgB,CAAGV,MAAM,CAACW,EAAV,gIAAtB,CAMA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,IAE5BC,CAAAA,MAF4B,CAEJD,KAFI,CAE5BC,MAF4B,CAEpBC,WAFoB,CAEJF,KAFI,CAEpBE,WAFoB,CAIpC,GAAMC,CAAAA,gBAAgB,CAAGV,mBAAmB,EAA5C,CACA,GAAMW,CAAAA,mBAAmB,CAAGV,sBAAsB,EAAlD,CAEAL,SAAS,CAAC,UAAM,CACdG,cAAc,CAACY,mBAAD,CAAsBH,MAAtB,CAAd,CACD,CAFQ,CAEN,CAACA,MAAD,CAFM,CAAT,CAIA,mBACE,sCACE,KAAC,OAAD,wBACE,KAAC,gBAAD,WACGE,gBAAgB,CAACE,QAAjB,EACCF,gBAAgB,CAACE,QAAjB,CAA0BC,GAA1B,CAA8B,SAACC,IAAD,qBAC9B,KAAC,OAAD,EAEE,EAAE,uCAAiCA,IAAI,CAACC,QAAtC,kBAAuDD,IAAI,CAACE,YAA5D,CAFJ,uBAIE,KAAC,WAAD,EAEE,EAAE,CAAEF,IAAI,CAACE,YAFX,CAGE,IAAI,CAAEP,WAHR,CAIE,KAAK,CAAEK,IAAI,CAACE,YAJd,CAKE,SAAS,CAAEF,IAAI,CAACG,cALlB,CAME,OAAO,CAAE,SANX,CAOE,UAAU,CAAEH,IAAI,CAACI,SAAL,CAAeC,MAAf,CAAsB,CAAtB,CAAwB,EAAxB,CAPd,EACOL,IAAI,CAACE,YADZ,CAJF,EACOF,IAAI,CAACM,EADZ,CAD8B,EAA9B,CAFJ,EADF,EADF,EADF,CAyBD,CApCM","sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nimport { EpisodeItem } from \"./episodeItem\";\nimport { \n  getList as getEpisodeList, \n  useStateEpisodeList, \n  useDispatchEpisodeList\n} from 'contextAPI/episode';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 45.25rem;\n  margin: 0 auto;\n  /* background-color: whitesmoke; */\n`;\n\nconst EpisodeListBlock = styled.ul`\n  width: 100%;\n  margin: 10px auto;\n  list-style: none;\n`;\n\nexport const EpisodeList = (props) => {\n\n  const { toonId, episodeName } = props;\n\n  const episodeListState = useStateEpisodeList();\n  const episodeListDispatch = useDispatchEpisodeList();\n\n  useEffect(() => {\n    getEpisodeList(episodeListDispatch, toonId)\n  }, [toonId])\n\n  return (\n    <>\n      <Wrapper>\n        <EpisodeListBlock>\n          {episodeListState.entities &&\n            episodeListState.entities.map((item) => (\n            <NavLink\n              key={item.id}\n              to={`/series/episode/view?toonId=${item.toon_sid}&name=${item.episode_name}`}\n            >\n              <EpisodeItem\n                key={item.episode_name}\n                id={item.episode_name}\n                name={episodeName}\n                title={item.episode_name}\n                thumbNail={item.thumbnail_path}\n                context={\"context\"}\n                uploadDate={item.create_at.substr(0,10)}\n              />\n            </NavLink>\n          ))}\n        </EpisodeListBlock>\n      </Wrapper>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}