{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import styled from\"styled-components\";import{Text}from\"@chakra-ui/react\";import{NavLink}from\"react-router-dom\";import testImage from\"image/test-webtoon.jpeg\";import{getList,useDispatchComicsList,useStateComicsList}from\"contextAPI/comics\";import{useEffect}from\"react\";import{Badge}from\"@chakra-ui/react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ItemCard=styled.li(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: calc((100% - 7rem) / 5);\\n  @media (max-width: 970px) {\\n    width: calc((100% - 6rem) / 4);\\n  }\\n  @media (max-width: 760px) {\\n    width: calc((100% - 4rem) / 3);\\n  }\\n  height: calc((100vw - 7rem) / 5 + 80px);\\n  margin: 0 20px 30px 0;\\n  display: inline-block;\\n  .menu-card {\\n    width: 95% !important;\\n    height: 90%;\\n    background: white;\\n    margin: 15px 5px 10px 5px;\\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\\n    border-radius: 10px;\\n    display: inline-grid !important;\\n    grid-template-rows: 2fr 1fr;\\n    grid-template-areas: \\\"thumbnail-zone\\\" \\\"context-zone\\\";\\n    .thumbnail-zone {\\n      grid-area: \\\"thumbnail-zone\\\";\\n      background-color: aliceblue;\\n      border-top-left-radius: 10px;\\n      border-top-right-radius: 10px;\\n      overflow: hidden;\\n      img {\\n        width: 100%;\\n        height: 100%;\\n        object-fit: cover;\\n      }\\n    }\\n    .context-zone {\\n      width: 100%;\\n      grid-area: \\\"context-zone\\\";\\n      background-color: white;\\n      border-bottom-left-radius: 10px;\\n      border-bottom-right-radius: 10px;\\n      overflow: hidden;\\n      .context-title {\\n        width: 100%;\\n        height: 30px;\\n        /* min-height: 30%; */\\n        margin: 10px auto auto auto;\\n        padding: 0 0 0 10px;\\n        font-family: NotoSans-Medium;\\n        font-size: 15px;\\n        text-overflow: ellipsis;\\n        overflow: hidden;\\n        white-space: nowrap;\\n      }\\n      .context-info {\\n        font-size: 13px;\\n        padding: 0 0 0 10px;\\n        height: auto;\\n        .scoure {\\n          float: right;\\n          margin-right: 15px;\\n        }\\n      }\\n      .alert-zone {\\n        margin-top: 10px;\\n        padding: 0 0 0 10px;\\n        height: auto;\\n        span {\\n          margin-right: 10px;\\n        }\\n      }\\n    }\\n  }\\n\"])));export default function Toon(props){var currentDay=props.currentDay;var comicsState=useStateComicsList();var comicsDispatch=useDispatchComicsList();// const list = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]\nuseEffect(function(){getList(comicsDispatch);},[]);var allList=function allList(){return/*#__PURE__*/_jsx(_Fragment,{children:comicsState.entities&&comicsState.entities.map(function(item){return/*#__PURE__*/_jsx(ItemCard,{children:/*#__PURE__*/_jsx(NavLink,{to:\"/series/episode?toonId=\".concat(item.toon_sid,\"&name=\").concat(item.title),children:/*#__PURE__*/_jsxs(\"div\",{className:\"menu-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"thumbnail-zone\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.thumbnail_path,alt:\"logoImage\"}),item.thumbnail_path]}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-zone\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"context-title\",children:item.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-info\",children:[item.context,/*#__PURE__*/_jsx(\"span\",{className:\"scoure\",children:\"4.4 / 10 reviews\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"alert-zone\",children:[/*#__PURE__*/_jsx(Badge,{colorScheme:\"green\",children:\"new\"}),/*#__PURE__*/_jsx(Badge,{colorScheme:\"red\",children:\"HOT\"})]})]})]},\"all\"+item.toon_sid)})},\"all\"+item.toon_sid);})});};var dayFilterList=function dayFilterList(){return/*#__PURE__*/_jsx(_Fragment,{children:comicsState.entities&&comicsState.entities.filter(function(item){return item.day===currentDay;}).map(function(item){return/*#__PURE__*/_jsx(ItemCard,{children:/*#__PURE__*/_jsx(NavLink,{to:\"/series/episode?toonId=\".concat(item.toon_sid),children:/*#__PURE__*/_jsxs(\"div\",{className:\"menu-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"thumbnail-zone\",children:/*#__PURE__*/_jsx(\"img\",{src:item.thumbnail_path,alt:\"logoImage\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-zone\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"context-title\",children:item.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"context-info\",children:[item.context,/*#__PURE__*/_jsx(\"span\",{className:\"scoure\",children:\"4.4 / 10 reviews\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"alert-zone\",children:[/*#__PURE__*/_jsx(Badge,{colorScheme:\"green\",children:\"new\"}),/*#__PURE__*/_jsx(Badge,{colorScheme:\"red\",children:\"HOT\"})]})]})]})})},\"filter\"+item.toon_sid);})});};// 나중에 for, map으로 돌리면 됨\nreturn/*#__PURE__*/_jsx(_Fragment,{children:currentDay!==\"전체\"?dayFilterList():allList()});}","map":{"version":3,"sources":["/Users/sa/dev/git/comicstack-backend/webapp/src/components/toon.js"],"names":["styled","Text","NavLink","testImage","getList","useDispatchComicsList","useStateComicsList","useEffect","Badge","ItemCard","li","Toon","props","currentDay","comicsState","comicsDispatch","allList","entities","map","item","toon_sid","title","thumbnail_path","context","dayFilterList","filter","day"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { Text } from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\nimport testImage from \"image/test-webtoon.jpeg\";\nimport {\n  getList,\n  useDispatchComicsList,\n  useStateComicsList,\n} from \"contextAPI/comics\";\nimport { useEffect } from \"react\";\nimport { Badge } from \"@chakra-ui/react\";\n\nconst ItemCard = styled.li`\n  width: calc((100% - 7rem) / 5);\n  @media (max-width: 970px) {\n    width: calc((100% - 6rem) / 4);\n  }\n  @media (max-width: 760px) {\n    width: calc((100% - 4rem) / 3);\n  }\n  height: calc((100vw - 7rem) / 5 + 80px);\n  margin: 0 20px 30px 0;\n  display: inline-block;\n  .menu-card {\n    width: 95% !important;\n    height: 90%;\n    background: white;\n    margin: 15px 5px 10px 5px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    border-radius: 10px;\n    display: inline-grid !important;\n    grid-template-rows: 2fr 1fr;\n    grid-template-areas: \"thumbnail-zone\" \"context-zone\";\n    .thumbnail-zone {\n      grid-area: \"thumbnail-zone\";\n      background-color: aliceblue;\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n      overflow: hidden;\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n    .context-zone {\n      width: 100%;\n      grid-area: \"context-zone\";\n      background-color: white;\n      border-bottom-left-radius: 10px;\n      border-bottom-right-radius: 10px;\n      overflow: hidden;\n      .context-title {\n        width: 100%;\n        height: 30px;\n        /* min-height: 30%; */\n        margin: 10px auto auto auto;\n        padding: 0 0 0 10px;\n        font-family: NotoSans-Medium;\n        font-size: 15px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n      .context-info {\n        font-size: 13px;\n        padding: 0 0 0 10px;\n        height: auto;\n        .scoure {\n          float: right;\n          margin-right: 15px;\n        }\n      }\n      .alert-zone {\n        margin-top: 10px;\n        padding: 0 0 0 10px;\n        height: auto;\n        span {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n`;\n\nexport default function Toon(props) {\n  const { currentDay } = props;\n\n  const comicsState = useStateComicsList();\n  const comicsDispatch = useDispatchComicsList();\n\n  // const list = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]\n\n  useEffect(() => {\n    getList(comicsDispatch);\n  }, []);\n\n  const allList = () => {\n    return (\n      <>\n        {comicsState.entities &&\n          comicsState.entities.map((item) => (\n            <ItemCard key={\"all\"+item.toon_sid}>\n              <NavLink to={`/series/episode?toonId=${item.toon_sid}&name=${item.title}`}>\n                <div className={\"menu-card\"} key={\"all\"+item.toon_sid}>\n                  <div className={\"thumbnail-zone\"}>\n                    <img src={item.thumbnail_path} alt=\"logoImage\" />\n                    {item.thumbnail_path}\n                  </div>\n\n                  <div className={\"context-zone\"}>\n                    <div className={\"context-title\"}>{item.title}</div>\n                    <div className={\"context-info\"}>\n                      {item.context}\n                      <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                    </div>\n                    <div className={\"alert-zone\"}>\n                      <Badge colorScheme=\"green\">new</Badge>\n                      <Badge colorScheme=\"red\">HOT</Badge>\n                    </div>\n                  </div>\n                </div>\n              </NavLink>\n            </ItemCard>\n          ))}\n      </>\n    );\n  };\n\n  const dayFilterList = () => {\n    return (\n      <>\n        {comicsState.entities &&\n          comicsState.entities\n            .filter((item) => item.day === currentDay)\n            .map((item) => (\n              <ItemCard key={\"filter\"+item.toon_sid}>\n                <NavLink to={`/series/episode?toonId=${item.toon_sid}`}>\n                  <div className={\"menu-card\"}>\n                    <div className={\"thumbnail-zone\"}>\n                      <img src={item.thumbnail_path} alt=\"logoImage\" />\n                    </div>\n\n                    <div className={\"context-zone\"}>\n                      <div className={\"context-title\"}>{item.title}</div>\n                      <div className={\"context-info\"}>\n                        {item.context}\n                        <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                      </div>\n                      <div className={\"alert-zone\"}>\n                        <Badge colorScheme=\"green\">new</Badge>\n                        <Badge colorScheme=\"red\">HOT</Badge>\n                      </div>\n                    </div>\n                  </div>\n                </NavLink>\n              </ItemCard>\n            ))}\n      </>\n    );\n  };\n\n  // 나중에 for, map으로 돌리면 됨\n  return <>{currentDay !== \"전체\" ? dayFilterList() : allList()}</>;\n}\n"]},"metadata":{},"sourceType":"module"}