{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer,useContext,createContext}from\"react\";import axios from\"axios\";// import { defaultValue } from 'model/lecture.model';\nimport{jsx as _jsx}from\"react/jsx-runtime\";var initialState={error:false,loading:false,entities:[{user_id:\"\",day:\"\",title:\"\",thumbnail_path:\"\",context:\"\",toon_sid:0}]};function reducer(state,action){switch(action.type){case\"GET_LIST\":return _objectSpread(_objectSpread({},state),{},{entities:action.payload,loading:true});default:throw new Error(\"Unhanded action type: \".concat(action.type));}}var ComicsListStateContext=/*#__PURE__*/createContext(initialState);var ComicsListDispatchcontext=/*#__PURE__*/createContext(null);export function useStateComicsList(){return useContext(ComicsListStateContext);}export function useDispatchComicsList(){return useContext(ComicsListDispatchcontext);}export var ComicsListProvider=function ComicsListProvider(_ref){var children=_ref.children;var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ComicsListStateContext.Provider,{value:state,children:/*#__PURE__*/_jsx(ComicsListDispatchcontext.Provider,{value:dispatch,children:children})});};export function getList(_x){return _getList.apply(this,arguments);}function _getList(){_getList=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"/api/toon/gettoons\");case 3:response=_context.sent;console.log(\"get comic list \",response.data);if(response.data){dispatch({type:\"GET_LIST\",payload:response.data.toons});}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);//dispatch({ type: \"GET_DATA_FAIL\", error: e });\nconsole.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return _getList.apply(this,arguments);}","map":{"version":3,"sources":["/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/comics.js"],"names":["React","useReducer","useContext","createContext","axios","initialState","error","loading","entities","user_id","day","title","thumbnail_path","context","toon_sid","reducer","state","action","type","payload","Error","ComicsListStateContext","ComicsListDispatchcontext","useStateComicsList","useDispatchComicsList","ComicsListProvider","children","dispatch","getList","get","response","console","log","data","toons"],"mappings":"ooBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,UAA5B,CAAwCC,aAAxC,KAA6D,OAA7D,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA;2CAGA,GAAMC,CAAAA,YAAY,CAAG,CACpBC,KAAK,CAAE,KADa,CAEpBC,OAAO,CAAE,KAFW,CAGpBC,QAAQ,CAAE,CAAC,CACRC,OAAO,CAAE,EADD,CAERC,GAAG,CAAE,EAFG,CAGRC,KAAK,CAAE,EAHC,CAIRC,cAAc,CAAE,EAJR,CAKRC,OAAO,CAAE,EALD,CAMRC,QAAQ,CAAE,CANF,CAAD,CAHU,CAArB,CAcA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,MAAxB,CAAgC,CAC9B,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,UAAL,CACE,sCACKF,KADL,MAEER,QAAQ,CAAES,MAAM,CAACE,OAFnB,CAGFZ,OAAO,CAAE,IAHP,GAKF,QACE,KAAM,IAAIa,CAAAA,KAAJ,iCAAmCH,MAAM,CAACC,IAA1C,EAAN,CARJ,CAUD,CAED,GAAMG,CAAAA,sBAAsB,cAAGlB,aAAa,CAACE,YAAD,CAA5C,CACA,GAAMiB,CAAAA,yBAAyB,cAAGnB,aAAa,CAAC,IAAD,CAA/C,CAEA,MAAO,SAASoB,CAAAA,kBAAT,EAA8B,CACnC,MAAOrB,CAAAA,UAAU,CAACmB,sBAAD,CAAjB,CACD,CAED,MAAO,SAASG,CAAAA,qBAAT,EAAiC,CACtC,MAAOtB,CAAAA,UAAU,CAACoB,yBAAD,CAAjB,CACD,CAED,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,iBACtBzB,UAAU,CAACc,OAAD,CAAUV,YAAV,CADY,4CACzCW,KADyC,iBAClCW,QADkC,iBAGhD,mBACE,KAAC,sBAAD,CAAwB,QAAxB,EAAiC,KAAK,CAAEX,KAAxC,uBACE,KAAC,yBAAD,CAA2B,QAA3B,EAAoC,KAAK,CAAEW,QAA3C,UACGD,QADH,EADF,EADF,CAOD,CAVM,CAYP,eAAsBE,CAAAA,OAAtB,4C,qFAAO,iBAAuBD,QAAvB,qKAEoBvB,CAAAA,KAAK,CAACyB,GAAN,CAAU,oBAAV,CAFpB,QAEGC,QAFH,eAIHC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BF,QAAQ,CAACG,IAAxC,EACA,GAAIH,QAAQ,CAACG,IAAb,CAAmB,CACjBN,QAAQ,CAAC,CAAET,IAAI,CAAE,UAAR,CAAoBC,OAAO,CAAEW,QAAQ,CAACG,IAAT,CAAcC,KAA3C,CAAD,CAAR,CACD,CAPE,+EASH;AACAH,OAAO,CAACC,GAAR,cAVG,oE","sourcesContent":["import React, { useReducer, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n// import { defaultValue } from 'model/lecture.model';\n\n\nconst initialState = {\n\terror: false,\n\tloading: false,\n\tentities: [{\n    user_id: \"\",\n    day: \"\",\n    title: \"\",\n    thumbnail_path: \"\",\n    context: \"\",\n    toon_sid: 0,\n  }],\n}\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_LIST\":\n      return {\n        ...state,\n        entities: action.payload,\n\t\t\t\tloading: true\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\nconst ComicsListStateContext = createContext(initialState);\nconst ComicsListDispatchcontext = createContext(null);\n\nexport function useStateComicsList() {\n  return useContext(ComicsListStateContext);\n}\n\nexport function useDispatchComicsList() {\n  return useContext(ComicsListDispatchcontext);\n}\n\nexport const ComicsListProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <ComicsListStateContext.Provider value={state}>\n      <ComicsListDispatchcontext.Provider value={dispatch}>\n        {children}\n      </ComicsListDispatchcontext.Provider>\n    </ComicsListStateContext.Provider>\n  );\n}\n\nexport async function getList(dispatch) {\n  try {\n    const response = await axios.get(\"/api/toon/gettoons\");\n\t\t\n    console.log(\"get comic list \", response.data);\n    if (response.data) {\n      dispatch({ type: \"GET_LIST\", payload: response.data.toons });\n    }\n  } catch (e) {\n    //dispatch({ type: \"GET_DATA_FAIL\", error: e });\n    console.log(e);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}