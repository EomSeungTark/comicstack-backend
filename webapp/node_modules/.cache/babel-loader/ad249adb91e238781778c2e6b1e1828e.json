{"ast":null,"code":"import _slicedToArray from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{NavLink}from\"react-router-dom\";import{Input,InputGroup,InputRightElement,Button,ButtonGroup,useDisclosure}from\"@chakra-ui/react\";import{SearchIcon,EditIcon,HamburgerIcon,CloseIcon}from\"@chakra-ui/icons\";import Logo from\"../image/logo.svg\";import{LoginModalComponent}from\"../components/modal\";import{useStateUser,useDispatchUser,logout}from\"contextAPI/user\";import\"./header.scss\";import{DropDownMenu}from'components/dropDownMenu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Header(){var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onClose=_useDisclosure.onClose,onOpen=_useDisclosure.onOpen;var userState=useStateUser();var userDispatch=useDispatchUser();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openMenu=_useState2[0],setOpenMenu=_useState2[1];var loginDropdownList=[{link:\"/series\",text:\"시리즈\"},{link:\"/register\",text:\"가입하기\"},{link:\"/login\",text:\"로그인\"}];var logoutDropdownList=[{link:\"/series\",text:\"시리즈\"},{link:\"/upload\",text:\"만화 업로드\"},{link:\"/lecture\",text:\"내 작품\"},{link:\"/logout\",text:\"로그아웃\"}];var handleOpenMenu=function handleOpenMenu(){setOpenMenu(!openMenu);};var handleLogout=function handleLogout(){logout(userDispatch);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"HeaderLayout\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"HeaderStart\",children:/*#__PURE__*/_jsx(NavLink,{to:\"/\",children:/*#__PURE__*/_jsx(\"img\",{width:\"170px\",height:\"85px\",style:{display:\"inline-block\"},src:Logo,alt:\"logoImage\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"HeaderEnd\",children:[/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(NavLink,{to:\"/series\",children:/*#__PURE__*/_jsx(Button,{style:{backgroundColor:\"#f2663b\",color:\"white\",height:\"33px\",marginTop:\"4px\"},children:\"\\uC2DC\\uB9AC\\uC988\"})}),userState.entity.user_id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavLink,{to:\"/upload\",children:/*#__PURE__*/_jsxs(Button,{children:[\"\\uB9CC\\uD654 \\uC5C5\\uB85C\\uB4DC\",/*#__PURE__*/_jsx(EditIcon,{style:{marginLeft:\"4px\"}})]})}),/*#__PURE__*/_jsx(NavLink,{to:\"/lecture\",children:/*#__PURE__*/_jsx(Button,{children:\"\\uB0B4 \\uC791\\uD488\"})}),/*#__PURE__*/_jsx(Button,{onClick:handleLogout,children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavLink,{to:\"/register\",children:/*#__PURE__*/_jsx(Button,{children:\"\\uAC00\\uC785\\uD558\\uAE30\"})}),/*#__PURE__*/_jsx(Button,{onClick:onOpen,children:\"\\uB85C\\uADF8\\uC778\"})]})]}),/*#__PURE__*/_jsxs(InputGroup,{className:\"input-group\",children:[/*#__PURE__*/_jsx(Input,{style:{marginLeft:\"15px\",height:\"36px\",marginTop:\"2px\"},size:\"md\",placeholder:\"search\"}),/*#__PURE__*/_jsx(InputRightElement,{children:/*#__PURE__*/_jsx(SearchIcon,{style:{color:\"#f74d1a\"}})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-header-end\",children:[openMenu?/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"30\",style:{marginRight:\"0.5rem\"},onClick:handleOpenMenu}):/*#__PURE__*/_jsx(HamburgerIcon,{fontSize:\"50\",onClick:handleOpenMenu}),/*#__PURE__*/_jsx(DropDownMenu,{openValue:openMenu,menuList:userState.entity.user_id?logoutDropdownList:loginDropdownList,logoutFunction:handleLogout})]})]}),/*#__PURE__*/_jsx(LoginModalComponent,{title:\"로그인\",isOpen:isOpen,onClose:onClose})]});}","map":{"version":3,"sources":["/Users/sa/dev/git/comicstack-backend/webapp/src/layout/header.js"],"names":["React","useState","NavLink","Input","InputGroup","InputRightElement","Button","ButtonGroup","useDisclosure","SearchIcon","EditIcon","HamburgerIcon","CloseIcon","LoginModalComponent","useStateUser","useDispatchUser","logout","DropDownMenu","Header","isOpen","onClose","onOpen","userState","userDispatch","openMenu","setOpenMenu","loginDropdownList","link","text","logoutDropdownList","handleOpenMenu","handleLogout","display","Logo","backgroundColor","color","height","marginTop","entity","user_id","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Input,\n  InputGroup,\n  InputRightElement,\n  Button,\n  ButtonGroup,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { SearchIcon, EditIcon, HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport Logo from \"../image/logo.svg\";\nimport { LoginModalComponent } from \"../components/modal\";\nimport { useStateUser, useDispatchUser, logout } from \"contextAPI/user\";\nimport \"./header.scss\";\nimport { DropDownMenu } from 'components/dropDownMenu';\n\nexport default function Header() {\n  const { isOpen, onClose, onOpen } = useDisclosure();\n  const userState = useStateUser();\n  const userDispatch = useDispatchUser();\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const loginDropdownList = [\n    {\n      link: \"/series\",\n      text: \"시리즈\"\n    },\n    {\n      link: \"/register\",\n      text: \"가입하기\"\n    },\n    {\n      link: \"/login\",\n      text: \"로그인\"\n    }\n  ]\n\n  const logoutDropdownList = [\n    {\n      link: \"/series\",\n      text: \"시리즈\"\n    },\n    {\n      link: \"/upload\",\n      text: \"만화 업로드\"\n    },\n    {\n      link: \"/lecture\",\n      text: \"내 작품\"\n    },\n    {\n      link: \"/logout\",\n      text: \"로그아웃\"\n    }\n  ]\n\n  const handleOpenMenu = () => {\n    setOpenMenu(!openMenu)\n  }\n\n  const handleLogout = () => {\n    logout(userDispatch);\n  }\n\n  return (\n    <div>\n      <div className=\"HeaderLayout\">\n        <div className=\"HeaderStart\">\n          <NavLink to=\"/\">\n            <img\n              width=\"170px\"\n              height=\"85px\"\n              style={{ display: \"inline-block\" }}\n              src={Logo}\n              alt=\"logoImage\"\n            />\n          </NavLink>\n        </div>\n        <div className=\"HeaderEnd\">\n          <ButtonGroup>\n            <NavLink to={\"/series\"}>\n              <Button\n                style={{\n                  backgroundColor: \"#f2663b\",\n                  color: \"white\",\n                  height: \"33px\",\n                  marginTop: \"4px\",\n                }}\n              >\n                시리즈\n              </Button>\n            </NavLink>\n            {userState.entity.user_id ? (\n              <>\n                <NavLink to={\"/upload\"}>\n                  <Button>\n                    만화 업로드\n                    <EditIcon style={{ marginLeft: \"4px\" }} />\n                  </Button>\n                </NavLink>\n                <NavLink to={\"/lecture\"}>\n                  <Button>내 작품</Button>\n                </NavLink>\n                <Button onClick={handleLogout}>로그아웃</Button>\n              </>\n            ) : (\n              <>\n                <NavLink to={\"/register\"}>\n                  <Button>가입하기</Button>\n                </NavLink>\n                <Button onClick={onOpen}>로그인</Button>\n              </>\n            )}\n          </ButtonGroup>\n          <InputGroup className={\"input-group\"}>\n            <Input\n              style={{ marginLeft: \"15px\", height: \"36px\", marginTop: \"2px\" }}\n              size=\"md\"\n              placeholder=\"search\"\n            />\n            <InputRightElement\n              children={<SearchIcon style={{ color: \"#f74d1a\" }} />}\n            />\n          </InputGroup>\n        </div>\n        <div className={\"mobile-header-end\"}>\n          {\n            openMenu ? <CloseIcon fontSize={\"30\"} style={{marginRight: \"0.5rem\"}} onClick={handleOpenMenu}/> \n            : <HamburgerIcon fontSize={\"50\"} onClick={handleOpenMenu}/>\n          }\n          <DropDownMenu \n            openValue={openMenu}\n            menuList={userState.entity.user_id ? logoutDropdownList : loginDropdownList}\n            logoutFunction={handleLogout}\n          />\n        </div>\n      </div>\n      <LoginModalComponent title={\"로그인\"} isOpen={isOpen} onClose={onClose} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}