{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/sa/dev/git/comicstack-backend/webapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer,useContext,createContext}from\"react\";import axios from\"axios\";// import { defaultValue } from 'model/lecture.model';\nimport{jsx as _jsx}from\"react/jsx-runtime\";var initialState={error:false,loading:false,entity:{thumbnail_path:\"\",toon_context:[],usercomments:[{user_id:\"\",commnet:\"\",good:0,bad:0}]}};function reducer(state,action){switch(action.type){case\"GET_EPISODE_IMAGE\":return _objectSpread(_objectSpread({},state),{},{entity:action.payload,loading:true});default:throw new Error(\"Unhanded action type: \".concat(action.type));}}var EpisodeImageStateContext=/*#__PURE__*/createContext(initialState);var EpisodeImageDispatchcontext=/*#__PURE__*/createContext(null);export function useStateEpisodeImage(){return useContext(EpisodeImageStateContext);}export function useDispatchEpisodeImage(){return useContext(EpisodeImageDispatchcontext);}export var EpisodeImageProvider=function EpisodeImageProvider(_ref){var children=_ref.children;var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(EpisodeImageStateContext.Provider,{value:state,children:/*#__PURE__*/_jsx(EpisodeImageDispatchcontext.Provider,{value:dispatch,children:children})});};export function getEpisodeImage(_x,_x2,_x3){return _getEpisodeImage.apply(this,arguments);}function _getEpisodeImage(){_getEpisodeImage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,toonId,episodeName){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"/api/toon/dotoon\",{user_id:\"\",toon_sid:parseInt(toonId),episode_name:episodeName});case 3:response=_context.sent;console.log(\"get epidsode image \",response.data);if(response.data){dispatch({type:\"GET_EPISODE_IMAGE\",payload:response.data});}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);//dispatch({ type: \"GET_DATA_FAIL\", error: e });\nconsole.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return _getEpisodeImage.apply(this,arguments);}","map":{"version":3,"sources":["/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/episodeImg.js"],"names":["React","useReducer","useContext","createContext","axios","initialState","error","loading","entity","thumbnail_path","toon_context","usercomments","user_id","commnet","good","bad","reducer","state","action","type","payload","Error","EpisodeImageStateContext","EpisodeImageDispatchcontext","useStateEpisodeImage","useDispatchEpisodeImage","EpisodeImageProvider","children","dispatch","getEpisodeImage","toonId","episodeName","post","toon_sid","parseInt","episode_name","response","console","log","data"],"mappings":"ooBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,UAA5B,CAAwCC,aAAxC,KAA6D,OAA7D,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA;2CAGA,GAAMC,CAAAA,YAAY,CAAG,CACpBC,KAAK,CAAE,KADa,CAEpBC,OAAO,CAAE,KAFW,CAGpBC,MAAM,CAAE,CACPC,cAAc,CAAE,EADT,CAEPC,YAAY,CAAE,EAFP,CAGPC,YAAY,CAAE,CAAC,CACdC,OAAO,CAAE,EADK,CAEdC,OAAO,CAAE,EAFK,CAGdC,IAAI,CAAE,CAHQ,CAIdC,GAAG,CAAE,CAJS,CAAD,CAHP,CAHY,CAArB,CAgBA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,MAAxB,CAAgC,CAC9B,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,mBAAL,CACE,sCACKF,KADL,MAEET,MAAM,CAAEU,MAAM,CAACE,OAFjB,CAGFb,OAAO,CAAE,IAHP,GAKF,QACE,KAAM,IAAIc,CAAAA,KAAJ,iCAAmCH,MAAM,CAACC,IAA1C,EAAN,CARJ,CAUD,CAED,GAAMG,CAAAA,wBAAwB,cAAGnB,aAAa,CAACE,YAAD,CAA9C,CACA,GAAMkB,CAAAA,2BAA2B,cAAGpB,aAAa,CAAC,IAAD,CAAjD,CAEA,MAAO,SAASqB,CAAAA,oBAAT,EAAgC,CACrC,MAAOtB,CAAAA,UAAU,CAACoB,wBAAD,CAAjB,CACD,CAED,MAAO,SAASG,CAAAA,uBAAT,EAAmC,CACxC,MAAOvB,CAAAA,UAAU,CAACqB,2BAAD,CAAjB,CACD,CAED,MAAO,IAAMG,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,iBACxB1B,UAAU,CAACe,OAAD,CAAUX,YAAV,CADc,4CAC3CY,KAD2C,iBACpCW,QADoC,iBAGlD,mBACE,KAAC,wBAAD,CAA0B,QAA1B,EAAmC,KAAK,CAAEX,KAA1C,uBACE,KAAC,2BAAD,CAA6B,QAA7B,EAAsC,KAAK,CAAEW,QAA7C,UACGD,QADH,EADF,EADF,CAOD,CAVM,CAYP,eAAsBE,CAAAA,eAAtB,4D,qGAAO,iBAA+BD,QAA/B,CAAyCE,MAAzC,CAAiDC,WAAjD,qKAEoB3B,CAAAA,KAAK,CAAC4B,IAAN,CACxB,kBADwB,CAExB,CACCpB,OAAO,CAAE,EADV,CAECqB,QAAQ,CAAEC,QAAQ,CAACJ,MAAD,CAFnB,CAGCK,YAAY,CAAEJ,WAHf,CAFwB,CAFpB,QAEGK,QAFH,eAWHC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCF,QAAQ,CAACG,IAA5C,EACA,GAAIH,QAAQ,CAACG,IAAb,CAAmB,CACjBX,QAAQ,CAAC,CAAET,IAAI,CAAE,mBAAR,CAA6BC,OAAO,CAAEgB,QAAQ,CAACG,IAA/C,CAAD,CAAR,CACD,CAdE,+EAgBH;AACAF,OAAO,CAACC,GAAR,cAjBG,oE","sourcesContent":["import React, { useReducer, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n// import { defaultValue } from 'model/lecture.model';\n\n\nconst initialState = {\n\terror: false,\n\tloading: false,\n\tentity: {\n\t\tthumbnail_path: \"\",\n\t\ttoon_context: [],\n\t\tusercomments: [{\n\t\t\tuser_id: \"\",\n\t\t\tcommnet: \"\",\n\t\t\tgood: 0,\n\t\t\tbad: 0\n\t\t}]\n\t},\n}\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_EPISODE_IMAGE\":\n      return {\n        ...state,\n        entity: action.payload,\n\t\t\t\tloading: true\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\nconst EpisodeImageStateContext = createContext(initialState);\nconst EpisodeImageDispatchcontext = createContext(null);\n\nexport function useStateEpisodeImage() {\n  return useContext(EpisodeImageStateContext);\n}\n\nexport function useDispatchEpisodeImage() {\n  return useContext(EpisodeImageDispatchcontext);\n}\n\nexport const EpisodeImageProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <EpisodeImageStateContext.Provider value={state}>\n      <EpisodeImageDispatchcontext.Provider value={dispatch}>\n        {children}\n      </EpisodeImageDispatchcontext.Provider>\n    </EpisodeImageStateContext.Provider>\n  );\n}\n\nexport async function getEpisodeImage(dispatch, toonId, episodeName) {\n  try {\n    const response = await axios.post(\n\t\t\t\"/api/toon/dotoon\", \n\t\t\t{\n\t\t\t\tuser_id: \"\",\n\t\t\t\ttoon_sid: parseInt(toonId),\n\t\t\t\tepisode_name: episodeName,\n\t\t\t}\n\t\t);\n\t\t\n    console.log(\"get epidsode image \", response.data);\n    if (response.data) {\n      dispatch({ type: \"GET_EPISODE_IMAGE\", payload: response.data });\n    }\n  } catch (e) {\n    //dispatch({ type: \"GET_DATA_FAIL\", error: e });\n    console.log(e);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}