[{"/Users/sa/dev/git/comicstack-backend/webapp/src/index.js":"1","/Users/sa/dev/git/comicstack-backend/webapp/src/App.js":"2","/Users/sa/dev/git/comicstack-backend/webapp/src/reportWebVitals.js":"3","/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/user.js":"4","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/seriesPage.js":"5","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/registerPage.js":"6","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/episodePage.js":"7","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/mainPage.js":"8","/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/episode.js":"9","/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/episodeImg.js":"10","/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/lecture.js":"11","/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/comics.js":"12","/Users/sa/dev/git/comicstack-backend/webapp/src/layout/footer.js":"13","/Users/sa/dev/git/comicstack-backend/webapp/src/layout/header.js":"14","/Users/sa/dev/git/comicstack-backend/webapp/src/components/toonList.js":"15","/Users/sa/dev/git/comicstack-backend/webapp/src/components/toonListWrapper.js":"16","/Users/sa/dev/git/comicstack-backend/webapp/src/components/episodeHeader.js":"17","/Users/sa/dev/git/comicstack-backend/webapp/src/components/registerForm.js":"18","/Users/sa/dev/git/comicstack-backend/webapp/src/components/adsWrapper.js":"19","/Users/sa/dev/git/comicstack-backend/webapp/src/components/episodeList.js":"20","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/lectureListPage.js":"21","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/uploadPage.js":"22","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/viewPage.js":"23","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/registEpisodePage.js":"24","/Users/sa/dev/git/comicstack-backend/webapp/src/components/modal.js":"25","/Users/sa/dev/git/comicstack-backend/webapp/src/components/toon.js":"26","/Users/sa/dev/git/comicstack-backend/webapp/src/components/episodeItem.js":"27","/Users/sa/dev/git/comicstack-backend/webapp/src/components/dayNav.js":"28","/Users/sa/dev/git/comicstack-backend/webapp/src/components/listBlock.js":"29","/Users/sa/dev/git/comicstack-backend/webapp/src/components/mainSlide.js":"30","/Users/sa/dev/git/comicstack-backend/webapp/src/components/dropDownMenu.js":"31","/Users/sa/dev/git/comicstack-backend/webapp/src/components/lectureList.js":"32","/Users/sa/dev/git/comicstack-backend/webapp/src/components/registCartoon.js":"33","/Users/sa/dev/git/comicstack-backend/webapp/src/components/registEpisode.js":"34","/Users/sa/dev/git/comicstack-backend/webapp/src/components/viewBody.js":"35","/Users/sa/dev/git/comicstack-backend/webapp/src/components/viewHeader.js":"36"},{"size":1316,"mtime":1628761526564,"results":"37","hashOfConfig":"38"},{"size":1078,"mtime":1628761526399,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1628761526565,"results":"40","hashOfConfig":"38"},{"size":3103,"mtime":1628761526402,"results":"41","hashOfConfig":"38"},{"size":693,"mtime":1628761526565,"results":"42","hashOfConfig":"38"},{"size":308,"mtime":1628761526565,"results":"43","hashOfConfig":"38"},{"size":742,"mtime":1628761526564,"results":"44","hashOfConfig":"38"},{"size":852,"mtime":1628761526565,"results":"45","hashOfConfig":"38"},{"size":1671,"mtime":1628761526402,"results":"46","hashOfConfig":"38"},{"size":1772,"mtime":1628761526402,"results":"47","hashOfConfig":"38"},{"size":1676,"mtime":1628761526402,"results":"48","hashOfConfig":"38"},{"size":1597,"mtime":1628761526402,"results":"49","hashOfConfig":"38"},{"size":1559,"mtime":1628761526564,"results":"50","hashOfConfig":"38"},{"size":3861,"mtime":1628761526564,"results":"51","hashOfConfig":"38"},{"size":555,"mtime":1628761526401,"results":"52","hashOfConfig":"38"},{"size":309,"mtime":1628761526401,"results":"53","hashOfConfig":"38"},{"size":1688,"mtime":1628761526400,"results":"54","hashOfConfig":"38"},{"size":5633,"mtime":1628761526401,"results":"55","hashOfConfig":"38"},{"size":406,"mtime":1628761526399,"results":"56","hashOfConfig":"38"},{"size":1529,"mtime":1628761526400,"results":"57","hashOfConfig":"38"},{"size":305,"mtime":1628761526565,"results":"58","hashOfConfig":"38"},{"size":206,"mtime":1628761526565,"results":"59","hashOfConfig":"38"},{"size":760,"mtime":1628761526565,"results":"60","hashOfConfig":"38"},{"size":315,"mtime":1628761526565,"results":"61","hashOfConfig":"38"},{"size":1980,"mtime":1628761526401,"results":"62","hashOfConfig":"38"},{"size":4918,"mtime":1628761526401,"results":"63","hashOfConfig":"38"},{"size":1384,"mtime":1628761526400,"results":"64","hashOfConfig":"38"},{"size":769,"mtime":1628761526400,"results":"65","hashOfConfig":"38"},{"size":6137,"mtime":1628761526400,"results":"66","hashOfConfig":"38"},{"size":4447,"mtime":1628761526400,"results":"67","hashOfConfig":"38"},{"size":1534,"mtime":1628761526400,"results":"68","hashOfConfig":"38"},{"size":2990,"mtime":1628761526400,"results":"69","hashOfConfig":"38"},{"size":4516,"mtime":1628761526401,"results":"70","hashOfConfig":"38"},{"size":4908,"mtime":1628761526401,"results":"71","hashOfConfig":"38"},{"size":1561,"mtime":1628761526401,"results":"72","hashOfConfig":"38"},{"size":1249,"mtime":1628761526401,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gowkv3",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sa/dev/git/comicstack-backend/webapp/src/index.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/App.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/reportWebVitals.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/user.js",["161"],"import React, { useReducer, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n\n\nconst initialState = {\n\terror: false,\n\tloading: false,\n\tentity: {\n\t\tuser_id: \"\",\n\t\tpassword: \"\",\n\t\taddress: \"\",\n\t\tphone_number: \"\",\n\t\tpersnal_basic_agree: false,\n\t\tpersnal_share_agree: false,\n\t\temail: \"\",\n\t\tsms_agree: false,\n\t\temail_agree: false,\n\t\tname: \"\",\n    status: false,\n\t},\n  signinLoading: false,\n  signin: false,\n  idCheckLoading: false,\n  idCheck: false,\n  loginLoading: false,\n  login: false,\n}\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SIGNIN\":\n      return {\n        ...state,\n        // signin: action.data,\n\t\t\t\tsigninloading: true\n      };\n    case \"ID_CHECK\":\n      return {\n        ...state,\n        idCheck: action.idCheck,\n\t\t\t\tidCheckLoading: true\n      };\n    case \"LOGIN\":\n      return {\n        ...state,\n        login: action.login,\n        entity: action.entity,\n\t\t\t\tloginLoading: true\n      };\n    case \"LOGOUT\":\n      return {\n        ...initialState\n      };\n    default:\n      throw new Error(`Unhanded action type: ${action.type}`);\n  }\n}\n\nconst UserStateContext = createContext();\nconst UserDispatchcontext = createContext();\n\nexport function UserProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchcontext.Provider value={dispatch}>\n        {children}\n      </UserDispatchcontext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nexport function useStateUser() {\n  return useContext(UserStateContext);\n}\n\nexport function useDispatchUser() {\n  return useContext(UserDispatchcontext);\n}\n\nexport async function signinUser(dispatch, userInfo) {\n  try {\n    const response = await axios.post(\n      \"/api/signin\",\n\t\t\tuserInfo  //json object?\n    );\n    console.log(\"res data\", response.data);\n    if (response.data) {\n      dispatch({ type: \"SIGNIN\" });\n    }\n    return response.data;\n  } catch (e) {\n    //dispatch({ type: \"GET_DATA_FAIL\", error: e });\n    console.log(e);\n  }\n}\n\nexport async function idCheck(dispatch, user_id){\n  try {\n    const response = await axios.post(\n      \"/api/idcheck\",\n      { user_id }\n    )\n    console.log(\"res data\", response.data);\n    if(response.data){\n      dispatch({ type: \"ID_CHECK\", idCheck: response.data.status })\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function loginCheck(dispatch, user_id, password){\n  try {\n    const response = await axios.post(\n      \"/api/login\",\n      { user_id, password }\n    )\n    console.log(\"login check = \", response);\n    if(response.data){\n      dispatch({ type: \"LOGIN\", login: response.data.status, entity: response.data })\n    }\n    return response.data\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function logout(dispatch){\n  dispatch({ type: \"LOGOUT\" })\n}\n\n\n\nfunction formattingDateTostring(date) {\n  const year = date.getFullYear();\n  let month = 1 + date.getMonth();\n  month = month >= 10 ? month : \"0\" + month;\n  let day = date.getDate();\n  day = day >= 10 ? day : \"0\" + day;\n  return year + \"-\" + month + \"-\" + day;\n}\n","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/seriesPage.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/pages/registerPage.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/pages/episodePage.js",["162","163"],"import { useState } from 'react';\nimport queryString from 'query-string'\n\nimport Header from '../layout/header';\nimport Footer from '../layout/footer';\nimport {EpisodeHeader} from '../components/episodeHeader';\nimport {EpisodeList} from '../components/episodeList';\n\nfunction EpisodePage() {\n\n\tconst [toonId, setToonId] = useState(queryString.parse(window.location.search).toonId || \"\");\n  const [episodeName, setEpisodeName] = useState(queryString.parse(window.location.search).name || \"\");\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<div className={\"body-layout\"}>\n\t\t\t\t<EpisodeHeader toonId={toonId} episodeName={episodeName}/>\n\t\t\t\t<EpisodeList toonId={toonId} episodeName={episodeName}/>\n\t\t\t</div>\n\t\t\t<Footer/>\n\t\t</>\n\t)\n}\n\nexport default EpisodePage;","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/mainPage.js",["164"],"import Header from \"../layout/header\";\n// import Body from '../layout/body';\nimport Footer from \"../layout/footer\";\nimport AdsWrapper from \"../components/adsWrapper\";\nimport ToonListWrapper from \"../components/toonListWrapper\";\n// import BodyInnerWrapper from '../components/bodyInnerWrapper';\nimport { MainSilde } from \"components/mainSlide\";\nimport { ListBlock } from \"components/listBlock\";\n\nfunction MainPage() {\n  return (\n    <>\n      <Header />\n      <div className={\"body-layout\"}>\n        <MainSilde />\n        <ListBlock title={\"새로운 학습만화\"} viewCardCount={4} />\n        <ListBlock title={\"베스트 모음\"} viewCardCount={3} />\n        <AdsWrapper />\n        <ListBlock title={\"추천 학습만화\"} viewCardCount={4} />\n        {/* <ToonListWrapper /> */}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default MainPage;\n","/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/episode.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/episodeImg.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/lecture.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/contextAPI/comics.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/layout/footer.js",["165"],"import styled from \"styled-components\";\nimport \"./footer.scss\";\nimport Logo from \"../image/logo_white.svg\";\n\nexport default function Footer() {\n  return (\n    <div className=\"FooterLayout\">\n      <div className=\"FooterLayoutStart\">\n        <div className=\"Service\">\n          <h3>서비스</h3>\n          <p>개발자용 코믹스택</p>\n          <p>학생용 코믹스택</p>\n          <p>코믹스택 스쿨</p>\n        </div>\n        <div className=\"Terms\">\n          <h3>약관</h3>\n          <p>개인정보 처리방침</p>\n          <p>이용약관</p>\n        </div>\n        <div className=\"Ask\">\n          <h3>문의</h3>\n          <p>FAQ/문의</p>\n          <p>기관 도입문의</p>\n        </div>\n        <div className=\"CustomerCenter\">\n          <h3>고객센터</h3>\n          <h4>코딩 테스트 및 교육 문의: 010-2354-7227</h4>\n          <p>문의하기 운영시간: 오전9시 ~ 오후 6시 (주말 및 공휴일 휴무)</p>\n          <p>점심시간: 오후 12시 ~ 오후 1시</p>\n        </div>\n        <div className=\"Logo\">\n          <img width=\"200px\" height=\"100px\" src={Logo} alt=\"logoImage\" />\n        </div>\n      </div>\n      <div className=\"FooterLayoutEnd\">\n        <hr style={{ border: \"1px solid  #444\" }} />\n        <p className=\"CompanyName\">2021 헤일러소프트</p>\n        <p className=\"CompanyDesc\">\n          헤일러소프트 / 대표 최진우 / 서울특별시 성동구 마장동 782-4 301호\n          <br></br>\n          사업자등록번호 586-23-01405\n        </p>\n      </div>\n    </div>\n  );\n}\n","/Users/sa/dev/git/comicstack-backend/webapp/src/layout/header.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/toonList.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/toonListWrapper.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/episodeHeader.js",["166"],"import styled from \"styled-components\";\nimport testImage from \"../image/test-webtoon.jpeg\";\nimport { Text, Button } from \"@chakra-ui/react\";\nimport { NavLink } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 45rem;\n  margin: 0 auto;\n  position: relative;\n  background-color: whitesmoke;\n`;\n\nconst InfoWrapper = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 100%;\n  margin-left: 50%;\n`;\n\nconst InfoTitle = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n  color: aliceblue;\n  width: 100%;\n  height: 30%;\n  padding-top: 30px;\n`;\n\nconst InfoStory = styled.div`\n  text-align: center;\n  width: 100%;\n  height: 20%;\n  margin-top: 10px;\n  color: aliceblue;\n  font-style: 20px;\n  font-weight: bold;\n`;\n\nconst ButtonWrapper = styled.div`\n  width: 20%;\n  margin: 5rem auto auto auto;\n`;\n\nexport const EpisodeHeader = (props) => {\n\n  const { toonId, episodeName } = props;\n  const storyText =\n    \"벨비는 드디어 꿈에 그리던 컴공과에 진학을 한다 하지만 자신의 상상과는 컴공과의 어려움에 부딪히고 공부를 시작하게 되는데...\";\n\n  return (\n    <>\n      <Wrapper>\n        <InfoWrapper>\n          <InfoTitle>\n            <h3>벨비의 개발일지</h3>\n          </InfoTitle>\n          <InfoStory>\n            <Text>{storyText}</Text>\n          </InfoStory>\n          <ButtonWrapper>\n            <NavLink to={`/series/episode/view?toonId=${toonId}`}>\n              <Button>첫화보기</Button>\n            </NavLink>\n          </ButtonWrapper>\n        </InfoWrapper>\n        <img src={testImage} alt={\"testImage\"} style={{ borderRadius: \"2%\" }} />\n      </Wrapper>\n    </>\n  );\n};\n","/Users/sa/dev/git/comicstack-backend/webapp/src/components/registerForm.js",["167","168","169"],"import { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport styled from \"styled-components\";\nimport Logo from \"../image/logo.svg\";\nimport {\n  Input,\n  FormControl,\n  FormLabel,\n  Text,\n  Button,\n  InputRightElement,\n  InputGroup,\n} from \"@chakra-ui/react\";\nimport {\n  signinUser,\n  idCheck,\n  useStateUser,\n  useDispatchUser,\n} from \"contextAPI/user\";\n\nconst Wrapper = styled.div`\n  width: 50%;\n  min-width: 410px;\n  height: 100%;\n  margin: 0 auto;\n  background-color: white;\n  margin-bottom: 100px;\n`;\n\nconst FormWrapper = styled.div`\n  width: 70%;\n  margin: 0 auto;\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  height: 50px;\n  line-height: 50px;\n  font-size: 25px;\n`;\n\nexport default function RegisterForm() {\n  const userInfoState = useStateUser();\n  const userInfoDispatch = useDispatchUser();\n\n  const [userName, setUserName] = useState(\"\");\n  const [userPhone, setUserPhone] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordCheck, setUserPasswordCheck] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userAddress, setUserAddress] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleIdCheck = () => {\n    idCheck(userInfoDispatch, userId);\n  };\n\n  useEffect(() => {\n    console.log(\"idchek\", userInfoState.idCheck)\n    if(userInfoState.idCheckLoading){\n      if(userInfoState.idCheck === true){\n        alert(\"사용가능합니다.\");\n      } else {\n        alert(\"다른 아이디를 사용해주세요\");\n      }\n    }\n  }, [userInfoState.idCheck])\n\n  const handleSubmit = () => {\n    // if(userName === \"\"){\n    // \talert(\"name 입력\");\n    // \treturn null;\n    // }\n    // if(userId === \"\"){\n    // \talert(\"Id 입력\");\n    // \treturn null;\n    // }\n    // if(userPassword === \"\"){\n    // \talert(\"password 입력\");\n    // \treturn null;\n    // }\n    // if(userPasswordCheck === \"\"){\n    // \talert(\"password check 입력\");\n    // \treturn null;\n    // }\n    // if(userPhone=== \"\"){\n    // \talert(\"Phone 입력\");\n    // \treturn null;\n    // }\n    // if(userAddress === \"\"){\n    // \talert(\"address 입력\");\n    // \treturn null;\n    // }\n    // if(userEmail === \"\"){\n    // \talert(\"email 입력\");\n    // \treturn null;\n    // }\n    if(!!userInfoState.idCheck === false){\n      alert(\"아이디 중복을 확인해주세요\");\n      return null;\n    }\n    const userInfo = {\n      user_id: userId,\n      password: userPassword,\n      address: userAddress,\n      phone_number: userPhone,\n      persnal_basic_agree: false,\n      persnal_share_agree: false,\n      email: userEmail,\n      sms_agree: false,\n      email_agree: false,\n      name: userName,\n    };\n    if (userInfoState.idCheck) {\n      signinUser(userInfoDispatch, userInfo)\n      .then((result) => {\n        if(result.status){\n          alert(\"회원가입 축하드립니다.\")\n          history.push(\"/\")\n        }\n      });\n    }\n  };\n\n  // console.log(\"??\", userId)\n\n  return (\n    <>\n      <Wrapper>\n        <img\n          width=\"200px\"\n          height=\"100px\"\n          style={{ margin: \"0 auto 20px auto\", paddingTop: \"10px\" }}\n          src={Logo}\n          alt=\"logoImage\"\n        />\n        <Title>\n          <Text>회원가입</Text>\n        </Title>\n        <FormWrapper>\n          <FormControl isRequired>\n            <FormLabel>Name</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"name\"}\n              onChange={(e) => setUserName(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>ID</FormLabel>\n            <InputGroup>\n              <Input\n                className={\"input-margin-bottom\"}\n                placeholder={\"id\"}\n                onChange={(e) => setUserId(e.target.value)}\n              />\n              <Button onClick={() => handleIdCheck()}>중복확인</Button>\n            </InputGroup>\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>Password</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"password\"}\n              type={\"password\"}\n              onChange={(e) => setUserPassword(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>Password check</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"password check\"}\n              type={\"password\"}\n              onChange={(e) => setUserPasswordCheck(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>Phone</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"phone\"}\n              onChange={(e) => setUserPhone(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>Address</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"Address\"}\n              onChange={(e) => setUserAddress(e.target.value)}\n            />\n          </FormControl>\n          <FormControl isRequired>\n            <FormLabel>E-mail</FormLabel>\n            <Input\n              className={\"input-margin-bottom\"}\n              placeholder={\"e-mail\"}\n              onChange={(e) => setUserEmail(e.target.value)}\n            />\n          </FormControl>\n          <Button onClick={handleSubmit}>가입</Button>\n        </FormWrapper>\n      </Wrapper>\n    </>\n  );\n}\n","/Users/sa/dev/git/comicstack-backend/webapp/src/components/adsWrapper.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/episodeList.js",["170"],"import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nimport { EpisodeItem } from \"./episodeItem\";\nimport { \n  getList as getEpisodeList, \n  useStateEpisodeList, \n  useDispatchEpisodeList\n} from 'contextAPI/episode';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 45.25rem;\n  margin: 0 auto;\n  /* background-color: whitesmoke; */\n`;\n\nconst EpisodeListBlock = styled.ul`\n  width: 100%;\n  margin: 10px auto;\n  list-style: none;\n`;\n\nexport const EpisodeList = (props) => {\n\n  const { toonId, episodeName } = props;\n\n  const episodeListState = useStateEpisodeList();\n  const episodeListDispatch = useDispatchEpisodeList();\n\n  useEffect(() => {\n    getEpisodeList(episodeListDispatch, toonId)\n  }, [toonId])\n\n  return (\n    <>\n      <Wrapper>\n        <EpisodeListBlock>\n          {episodeListState.entities &&\n            episodeListState.entities.map((item) => (\n            <NavLink\n              key={item.id}\n              to={`/series/episode/view?toonId=${item.toon_sid}&name=${item.episode_name}`}\n            >\n              <EpisodeItem\n                key={item.episode_name}\n                id={item.episode_name}\n                name={episodeName}\n                title={item.episode_name}\n                thumbNail={item.thumbnail_path}\n                context={\"context\"}\n                uploadDate={item.create_at.substr(0,10)}\n              />\n            </NavLink>\n          ))}\n        </EpisodeListBlock>\n      </Wrapper>\n    </>\n  );\n};\n","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/lectureListPage.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/pages/uploadPage.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/pages/viewPage.js",["171","172","173"],"import { useState } from 'react';\nimport styled from \"styled-components\";\nimport { ViewHeader } from \"components/viewHeader\";\nimport { ViewBody } from 'components/viewBody';\nimport queryString from \"query-string\";\n\nfunction ViewPage() {\n\n\t// const toonId = queryString.parse(location.search).toonId;\n\tconst [toonId, setToonId] = useState(queryString.parse(window.location.search).toonId);\n\tconst [name, setName] = useState(queryString.parse(window.location.search).name);\n\tconst [headerUI, setHeaderUI] = useState(true)\n\n\treturn (\n\t\t<>\n\t\t\t<ViewHeader toonId={toonId} name={name} viewHeaderUI={headerUI}/>\n\t\t\t<ViewBody \n\t\t\t\tviewHeaderUI={headerUI} \n\t\t\t\tsetViewHeaderUI={setHeaderUI}\n\t\t\t\ttoonId={toonId}\n\t\t\t\tname={name}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport default ViewPage;","/Users/sa/dev/git/comicstack-backend/webapp/src/pages/registEpisodePage.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/modal.js",["174"],"import React, {useState} from 'react';\nimport { useStateUser, useDispatchUser, loginCheck } from 'contextAPI/user';\nimport {Modal, ModalOverlay, ModalContent, ModalBody, ModalHeader, ModalCloseButton, Text, ModalFooter, Button, Input} from '@chakra-ui/react';\n\nexport const LoginModalComponent = ({isOpen, onClose, title}) => {\n\n  const userState = useStateUser();\n  const userDispatch = useDispatchUser();\n\n  const [userId, setUserId] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n\n  const handleLogin = () => {\n    loginCheck(userDispatch, userId, userPassword)\n    .then((result) => {\n      console.log(\"status\", result)\n      if(result.status){\n        onClose();\n      } else{\n        alert(\"아이디 비밀번호 안맞음\");\n      }\n    })\n    // if(userState.login){\n    //   onClose();\n    // } else {\n    //   alert(\"아이디 비밀번호 안맞음\");\n    // }\n  }\n\n\n  return (\n    <>\n      <Modal blockScrollOnMount={false} size={\"sm\"} isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader style={{textAlign: \"center\"}}>{title}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n\t\t\t\t\t\t<Text>username</Text>\n\t\t\t\t\t\t<Input \n              style={{marginBottom: \"10px\"}} \n              placeholder=\"아이디\" \n              onChange={(e) => setUserId(e.target.value)}\n            />\n\t\t\t\t\t\t<Text>password</Text>\n\t\t\t\t\t\t<Input \n              style={{marginBottom: \"10px\"}} \n              placeholder=\"비밀번호\"\n              type={\"password\"}\n              onChange={(e) => setUserPassword(e.target.value)}\n            />\n            {/* <Lorem count={2} /> */}\n          </ModalBody>\n\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={() => handleLogin()}>\n              login\n            </Button>\n            {/* <Button variant=\"ghost\">Secondary Action</Button> */}\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}","/Users/sa/dev/git/comicstack-backend/webapp/src/components/toon.js",["175","176","177"],"import styled from \"styled-components\";\nimport { Text } from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\nimport testImage from \"image/test-webtoon.jpeg\";\nimport {\n  getList,\n  useDispatchComicsList,\n  useStateComicsList,\n} from \"contextAPI/comics\";\nimport { useEffect } from \"react\";\nimport { Badge } from \"@chakra-ui/react\";\n\nconst ItemCard = styled.li`\n  width: calc((100% - 7rem) / 5);\n  @media (max-width: 970px) {\n    width: calc((100% - 6rem) / 4);\n  }\n  @media (max-width: 760px) {\n    width: calc((100% - 4rem) / 3);\n  }\n  height: calc((100vw - 7rem) / 5 + 80px);\n  margin: 0 20px 30px 0;\n  display: inline-block;\n  .menu-card {\n    width: 95% !important;\n    height: 90%;\n    background: white;\n    margin: 15px 5px 10px 5px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    border-radius: 10px;\n    display: inline-grid !important;\n    grid-template-rows: 2fr 1fr;\n    grid-template-areas: \"thumbnail-zone\" \"context-zone\";\n    .thumbnail-zone {\n      grid-area: \"thumbnail-zone\";\n      background-color: aliceblue;\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n      overflow: hidden;\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n    .context-zone {\n      width: 100%;\n      grid-area: \"context-zone\";\n      background-color: white;\n      border-bottom-left-radius: 10px;\n      border-bottom-right-radius: 10px;\n      overflow: hidden;\n      .context-title {\n        width: 100%;\n        height: 30px;\n        /* min-height: 30%; */\n        margin: 10px auto auto auto;\n        padding: 0 0 0 10px;\n        font-family: NotoSans-Medium;\n        font-size: 15px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n      .context-info {\n        font-size: 13px;\n        padding: 0 0 0 10px;\n        height: auto;\n        .scoure {\n          float: right;\n          margin-right: 15px;\n        }\n      }\n      .alert-zone {\n        margin-top: 10px;\n        padding: 0 0 0 10px;\n        height: auto;\n        span {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n`;\n\nexport default function Toon(props) {\n  const { currentDay } = props;\n\n  const comicsState = useStateComicsList();\n  const comicsDispatch = useDispatchComicsList();\n\n  // const list = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]\n\n  useEffect(() => {\n    getList(comicsDispatch);\n  }, []);\n\n  const allList = () => {\n    return (\n      <>\n        {comicsState.entities &&\n          comicsState.entities.map((item) => (\n            <ItemCard key={\"all\"+item.toon_sid}>\n              <NavLink to={`/series/episode?toonId=${item.toon_sid}&name=${item.title}`}>\n                <div className={\"menu-card\"} key={\"all\"+item.toon_sid}>\n                  <div className={\"thumbnail-zone\"}>\n                    <img src={item.thumbnail_path} alt=\"logoImage\" />\n                    {item.thumbnail_path}\n                  </div>\n\n                  <div className={\"context-zone\"}>\n                    <div className={\"context-title\"}>{item.title}</div>\n                    <div className={\"context-info\"}>\n                      {item.context}\n                      <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                    </div>\n                    <div className={\"alert-zone\"}>\n                      <Badge colorScheme=\"green\">new</Badge>\n                      <Badge colorScheme=\"red\">HOT</Badge>\n                    </div>\n                  </div>\n                </div>\n              </NavLink>\n            </ItemCard>\n          ))}\n      </>\n    );\n  };\n\n  const dayFilterList = () => {\n    return (\n      <>\n        {comicsState.entities &&\n          comicsState.entities\n            .filter((item) => item.day === currentDay)\n            .map((item) => (\n              <ItemCard key={\"filter\"+item.toon_sid}>\n                <NavLink to={`/series/episode?toonId=${item.toon_sid}`}>\n                  <div className={\"menu-card\"}>\n                    <div className={\"thumbnail-zone\"}>\n                      <img src={item.thumbnail_path} alt=\"logoImage\" />\n                    </div>\n\n                    <div className={\"context-zone\"}>\n                      <div className={\"context-title\"}>{item.title}</div>\n                      <div className={\"context-info\"}>\n                        {item.context}\n                        <span className={\"scoure\"}>4.4 / 10 reviews</span>\n                      </div>\n                      <div className={\"alert-zone\"}>\n                        <Badge colorScheme=\"green\">new</Badge>\n                        <Badge colorScheme=\"red\">HOT</Badge>\n                      </div>\n                    </div>\n                  </div>\n                </NavLink>\n              </ItemCard>\n            ))}\n      </>\n    );\n  };\n\n  // 나중에 for, map으로 돌리면 됨\n  return <>{currentDay !== \"전체\" ? dayFilterList() : allList()}</>;\n}\n","/Users/sa/dev/git/comicstack-backend/webapp/src/components/episodeItem.js",["178","179"],"import styled from \"styled-components\";\n\nconst EpisodeItemWrapper = styled.li`\n  width: 100%;\n  height: 100px;\n  margin-bottom: 6px;\n  padding-bottom: 6px;\n  display: inline-flex;\n  border-bottom: 1px solid #f2663b;\n`;\n\nconst ImageZone = styled.div`\n  width: 100px;\n  height: 100%;\n  > img {\n    height: 100%;\n  }\n  background-color: bisque;\n`;\n\nconst ContentZone = styled.div`\n  width: calc(100% - 100px);\n  height: 100%;\n  padding: 5px;\n`;\n\nconst EpisodeName = styled.div`\n  width: 100%;\n  height: 20px;\n  margin-top: 10px;\n  padding-left: 0.4rem;\n`;\n\nconst EpisodeTitle = styled.div`\n  width: 100%;\n  height: 30px;\n  padding-left: 1rem;\n  font-size: 20px;\n`;\n\nconst EpisodeUploadDate = styled.div`\n  width: 100%;\n  height: 20px;\n  text-align: right;\n`;\n\nexport const EpisodeItem = (props) => {\n  const { id, name, title, thumbNail, context, uploadDate } = props;\n\n  console.log(\"series episode path\", thumbNail)\n\n  return (\n    <>\n      <EpisodeItemWrapper>\n        <ImageZone>\n          <img\n            src={thumbNail}\n            alt={\"\"}\n          />\n          {/* <img src={require(image).default} alt={\"\"}/> */}\n        </ImageZone>\n        <ContentZone>\n          <EpisodeName>{name}</EpisodeName>\n          <EpisodeTitle>{title}</EpisodeTitle>\n          <EpisodeUploadDate>{uploadDate}</EpisodeUploadDate>\n        </ContentZone>\n      </EpisodeItemWrapper>\n    </>\n  );\n};\n","/Users/sa/dev/git/comicstack-backend/webapp/src/components/dayNav.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/listBlock.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/mainSlide.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/dropDownMenu.js",[],"/Users/sa/dev/git/comicstack-backend/webapp/src/components/lectureList.js",["180","181"],"import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components';\nimport { useDispatchLectureList, useStateLectureList, getList as getLectureList } from 'contextAPI/lecture';\nimport { useStateUser } from 'contextAPI/user'\nimport { Button } from '@chakra-ui/react'\n\nconst Warpper = styled.div`\n\twidth: 90%;\n\theight: auto;\n\tmargin: 0 auto;\n\t.title {\n\t\twidth: 100%;\n\t\theight: 80px;\n\t\ttext-align: center;\n\t\tfont-size: 30px;\n\t\tfont-weight: bold;\n\t\tpadding: 20px;\n\t}\n\n\t.card {\n\t\twidth: calc((100% - 80px) / 4);\n\t\theight: calc((100vw - 20px) / 4);\n\t\tmin-height: 150px;\n\t\tdisplay: inline-block;\n\t\tmargin-left: 20px;\n\t\tmargin-bottom: 20px;\n\t\tbox-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\t\tbackground-color: #E2E8F0;\n\t\tborder-radius: 10px;\n\t\timg {\n\t\t\twidth: 100%;\n\t\t\t/* 아래 그리드 비율에서 이미지의 비율을 곱한다 */\n\t\t\theight: calc(((100vw - 20px) / 4) / 4.5 * 2.5);\n\t\t\tborder-top-left-radius: 10px;\n\t\t\tborder-top-right-radius: 10px;\n\t\t}\n\t\tdisplay: inline-grid;\n\t\tgrid-template-rows: 2.5fr 1fr 1fr;\n\t\tgrid-template-areas: \"thumbnail-zone\" \"content-zone\" \"button-zone\";\n\t\t.thumbnail-zone{\n\t\t\tgrid-area: \"thumbnail-zone\";\n\n\t\t}\n\t\t.content-zone{\n\t\t\tgrid-area: \"content-zone\";\n\t\t\tpadding: 10px;\n\t\t\t.content-title {\n\t\t\t\tfont-size: 21px;\n\t\t\t}\n\t\t\t.content-context {\n\t\t\t\tfont-size: 12px;\n\t\t\t}\n\t\t}\n\t\t.button-zone{\n\t\t\tgrid-area: \"button-zone\";\n\t\t\tborder-radius: 10px;\n\t\t\twidth: 50%;\n\t\t\tmargin: 10px auto auto auto;\n\t\t\tbackground-color: #f1977b;\n\t\t}\n\t}\n\n\t.regist-button {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tmargin-bottom: 10px;\n\t}\n\n`;\n\nexport const LectureList = () => {\n\n\tconst history = useHistory();\n\tconst userState = useStateUser();\n\tconst lectureListState = useStateLectureList();\n\tconst lectureListDispatch = useDispatchLectureList();\n\n\tuseEffect(() => {\n\t\tgetLectureList(lectureListDispatch, userState.entity.user_id)\n\t}, [userState.entity.user_id])\n\n\tconst goRegistPage = (toonId) => {\n\t\thistory.push(`/series/episode/upload?toonId=${toonId}`)\n\t}\n\n\tconst lectureCard = (state) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{state.entities && \n\t\t\t\t\tstate.entities.map((item) => (\n\t\t\t\t\t\t<div key={item.toon_sid} className={\"card\"}>\n\t\t\t\t\t\t\t<div className={\"thumbnail-zone\"}>\n\t\t\t\t\t\t\t\t<img src={item.thumbnail_path} alt={\"\"}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"content-zone\"}>\n\t\t\t\t\t\t\t\t<span className={\"content-title\"}>{item.title}</span>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<span className={\"content-context\"}>작품설명: {item.context}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Button onClick={() => goRegistPage(item.toon_sid)} className={\"button-zone\"}>새 회차 등록</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst goRegistToonPage = () => {\n\t\thistory.push(\"/upload\")\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Warpper>\n\t\t\t\t<div className={\"title\"}>\n\t\t\t\t\t내 작품\n\t\t\t\t</div>\n\t\t\t\t<div className={\"regist-button\"}>\n\t\t\t\t\t<Button onClick={goRegistToonPage}>새 작품 등록</Button>\n\t\t\t\t</div>\n\t\t\t\t{lectureCard(lectureListState)}\n\t\t\t</Warpper>\n\t\t</>\n\t)\n}","/Users/sa/dev/git/comicstack-backend/webapp/src/components/registCartoon.js",["182"],"import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { Input, Select, Textarea, Button, Stack } from '@chakra-ui/react';\nimport { useStateUser } from 'contextAPI/user';\n\nconst Wrapper = styled.div`\n\twidth: 30%;\n\theight: 31.25rem;\n\tmargin: 10px auto;\n\t.file-view {\n\t\twidth: calc(100% - 65px);\n\t\theight: 40px;\n\t\ttext-overflow: ellipsis;\n\t}\n\t.title {\n\t\ttext-align: center;\n\t\tfont-size: 30px;\n\t}\n\tlabel {\n\t\tcursor: pointer;\n\t\tmargin: 0 auto;\n\t\t/* border: 1px solid black; */\n\t\tborder-radius: 5px;\n\t\tbackground-color: #1aacac;\n\t\tpadding: 10px;\n\t\theight: 40px;\n\t}\n\tinput[type=file]{\n\t\tdisplay: none;\n\t}\n`;\n\nexport const RegistCartoon = () => {\n\n\tconst [imgBase64, setImgBase64] = useState([]); // 파일 base64\n \tconst [imgFile, setImgFile] = useState(null);\t//파일\n\tconst [fileView, setFileView] = useState();\n\tconst [webToonUploadDay, setWebToonUploadDay] = useState();\n\tconst [title, setTitle] = useState();\n\tconst [summary, setSummary] = useState();\n\tconst [genre, setGenre] = useState();\n\tconst userState = useStateUser();\n\tconst history = useHistory();\n\n\tconst day = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"]\n\tconst genreList = [\"액션\", \"로맨스\", \"드라마\", \"스릴러\"]\n\n\tconst handleChangeFile = (event) => {\n    console.log(event.target.files)\n    setImgFile(event.target.files);\n    //fd.append(\"file\", event.target.files)\n    setImgBase64([]);\n    for(let i=0;i<event.target.files.length;i++){\n\t\t\tif (event.target.files[i]) {\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.readAsDataURL(event.target.files[i]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\t\t\t\t// 파일 상태 업데이트\n\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t// 2. 읽기가 완료되면 아래코드가 실행됩니다.\n\t\t\t\t\tconst base64 = reader.result;\n\t\t\t\t\t// console.log(base64)\n\t\t\t\t\tif (base64) {\n\t\t\t\t\t//  images.push(base64.toString())\n\t\t\t\t\tconst base64Sub = base64.toString()\n\t\t\t\t\t\t\n\t\t\t\t\tsetImgBase64(imgBase64 => [...imgBase64, base64Sub]);\n\t\t\t\t\t//  setImgBase64(newObj);\n\t\t\t\t\t\t// 파일 base64 상태 업데이트\n\t\t\t\t\t//  console.log(images)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n  \t}\n\n  }\n\n\tuseEffect(() => {\n\t\tconst imgValue = () => {\n\t\t\tif(imgFile){\n\t\t\t\tif(imgFile.length === 1) {\n\t\t\t\t\treturn imgFile[0].name;\n\t\t\t\t} else if(imgFile.length === 0) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t} else {\n\t\t\t\t\treturn \"파일 \"+ imgFile.length+\"개\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetFileView(imgValue())\n\t}, [imgFile])\n\n\tconst WriteBoard = async()=> {\n    const fd = new FormData();\n    Object.values(imgFile).forEach((file) => fd.append(\"thumbnail_file\", file));\n\t\tfd.append(\"user_id\", userState.entity.user_id);\n\t\tfd.append(\"title\", title);\n\t\tfd.append(\"day\", webToonUploadDay);\n\t\tfd.append(\"pass\", true);\n\t\tfd.append(\"context\", summary);\n\t\tfd.append(\"genre\", genre);\n\n\n    await axios.post('/api/toon/regist', fd, {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": `multipart/form-data; `,\n\t\t\t}\n\t\t})\n\t\t.then((response) => {\n\t\t\tif(response.data){\n\t\t\t\tif(response.data.status){\n\t\t\t\t\thistory.push(\"/lecture\");\n\t\t\t\t}\n\t\t\t\t// history.push(\"/test1\");\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// 예외 처리\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Wrapper>\n\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t<div className={\"title\"}>강의 등록</div>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tplaceholder=\"강의 제목\" \n\t\t\t\t\t\tname={\"title\"} \n\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Select placeholder=\"연재일\" onChange={(e) => setWebToonUploadDay(e.target.value)}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tday.map((item) => (\n\t\t\t\t\t\t\t\t<option key={item} value={item}>{item}</option>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Select placeholder=\"장르\" onChange={(e) => setGenre(e.target.value)}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgenreList.map((item) => (\n\t\t\t\t\t\t\t\t<option key={item} value={item}>{item}</option>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Textarea placeholder=\"줄거리\" onChange={(e) => setSummary(e.target.value)}/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input className={\"file-view\"} placeholder=\" 파일 선택\" value={fileView} />\n\t\t\t\t\t\t<label htmlFor={\"file\"}>업로드</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tid=\"file\" \n\t\t\t\t\t\t\tname={\"thumbnail_file\"} \n\t\t\t\t\t\t\tonChange={handleChangeFile} \n\t\t\t\t\t\t\tmultiple=\"multiple\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* {imgBase64.map((item) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"d-block w-100\"\n\t\t\t\t\t\t\t\tsrc={item}\n\t\t\t\t\t\t\t\talt=\"First slide\"\n\t\t\t\t\t\t\t\tstyle={{width:\"100%\",height:\"550px\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}) } */}\n\t\t\t\t\t<Button onClick={WriteBoard}>작성완료</Button>\n\t\t\t\t</Stack>\n\t\t\t</Wrapper>\n\t\t</>\n\t)\n}","/Users/sa/dev/git/comicstack-backend/webapp/src/components/registEpisode.js",["183","184","185","186","187"],"import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\nimport { Input, Select, Textarea, Button, Stack } from '@chakra-ui/react';\nimport { useStateUser } from 'contextAPI/user';\n\nconst Wrapper = styled.div`\n\twidth: 30%;\n\theight: 31.25rem;\n\tmargin: 10px auto;\n\t.file-view {\n\t\twidth: calc(100% - 65px);\n\t\theight: 40px;\n\t\ttext-overflow: ellipsis;\n\t}\n\t.title {\n\t\ttext-align: center;\n\t\tfont-size: 30px;\n\t}\n\t.sub-title {\n\t\ttext-align: left;\n\t\tfont-size: 20px;\n\t}\n\tlabel {\n\t\tcursor: pointer;\n\t\tmargin: 0 auto;\n\t\t/* border: 1px solid black; */\n\t\tborder-radius: 5px;\n\t\tbackground-color: #1aacac;\n\t\tpadding: 10px;\n\t\theight: 40px;\n\t}\n\tinput[type=file]{\n\t\tdisplay: none;\n\t}\n`;\n\nexport const RegistEpisode = () => {\n\n\tconst [imgBase64, setImgBase64] = useState([]); // 파일 base64\n \tconst [thumbnailFile, setThumbnailFile] = useState(null);\t//파일\n\tconst [episodeFile, setEpisodeFile] = useState(null);\n\tconst [thumbnailFileView, setThumbnailFileView] = useState();\n\tconst [episodeFileView, setEpisodeFileView] = useState();\n\tconst [title, setTitle] = useState();\n\tconst [toonId, setToonId] = useState(queryString.parse(window.location.search).toonId || null);\n\tconst [seriesName, setSeriesName] = useState(queryString.parse(window.location.search).seriesName || null);\n\tconst userState = useStateUser();\n\tconst history = useHistory();\n\n\tconst handleChangeFile = (event, type) => {\n    console.log(event.target.files)\n\t\tif(type === 1){\n\t\t\tsetThumbnailFile(event.target.files);\n\t\t} else if(type === 2){\n\t\t\tsetEpisodeFile(event.target.files);\n\t\t}\n    //fd.append(\"file\", event.target.files)\n    setImgBase64([]);\n    for(let i=0;i<event.target.files.length;i++){\n\t\t\tif (event.target.files[i]) {\n\t\t\t\tlet reader = new FileReader();\n\t\t\t\treader.readAsDataURL(event.target.files[i]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\t\t\t\t// 파일 상태 업데이트\n\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t// 2. 읽기가 완료되면 아래코드가 실행됩니다.\n\t\t\t\t\tconst base64 = reader.result;\n\t\t\t\t\t// console.log(base64)\n\t\t\t\t\tif (base64) {\n\t\t\t\t\t//  images.push(base64.toString())\n\t\t\t\t\tconst base64Sub = base64.toString()\n\t\t\t\t\t\t\n\t\t\t\t\tsetImgBase64(imgBase64 => [...imgBase64, base64Sub]);\n\t\t\t\t\t//  setImgBase64(newObj);\n\t\t\t\t\t\t// 파일 base64 상태 업데이트\n\t\t\t\t\t//  console.log(images)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n  \t}\n\n  }\n\n\tconst imgValue = (file) => {\n\t\tif(file){\n\t\t\tif(file.length === 1) {\n\t\t\t\treturn file[0].name;\n\t\t\t} else if(file.length === 0) {\n\t\t\t\treturn \"\";\n\t\t\t} else {\n\t\t\t\treturn \"파일 \"+ file.length+\"개\";\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetThumbnailFileView(imgValue(thumbnailFile))\n\t}, [thumbnailFile])\n\n\tuseEffect(() => {\n\t\tsetEpisodeFileView(imgValue(episodeFile))\n\t}, [episodeFile])\n\n\tconst WriteBoard = async()=> {\n    const fd= new FormData();\n    Object.values(thumbnailFile).forEach((file) => fd.append(\"thumbnail_files\", file));\n\t\tObject.values(episodeFile).forEach((file) => fd.append(\"toon_files\", file));\n\t\tfd.append(\"user_id\", userState.entity.user_id);\n\t\tfd.append(\"toon_sid\", toonId)\n\t\tfd.append(\"episode_name\", title);\n\n\n    await axios.post('/api/toon/upload', fd, {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": `multipart/form-data; `,\n\t\t\t}\n\t\t})\n\t\t.then((response) => {\n\t\t\tif(response.data){\n\t\t\t\tif(response.data.status){\n\t\t\t\t\thistory.push(\"/lecture\");\n\t\t\t\t}\n\t\t\t\t// history.push(\"/test1\");\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// 예외 처리\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Wrapper>\n\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t<div className={\"title\"}>에피소드 등록</div>\n\t\t\t\t\t<div className={\"sub-title\"}>시리즈: {seriesName}</div>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tplaceholder=\"에피소드 제목  ex) 1부 20화\" \n\t\t\t\t\t\tname={\"title\"} \n\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input className={\"file-view\"} placeholder=\" 섬네일 파일 선택\" defaultValue={thumbnailFileView || \"\"} />\n\t\t\t\t\t\t<label htmlFor={\"thumbnailFile\"}>업로드</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tid=\"thumbnailFile\" \n\t\t\t\t\t\t\tname={\"thumbnail_file\"} \n\t\t\t\t\t\t\tonChange={(event) => handleChangeFile(event, 1)} \n\t\t\t\t\t\t\tmultiple=\"multiple\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input className={\"file-view\"} placeholder=\" 에피소드 파일 선택\" defaultValue={episodeFileView || \"\"} />\n\t\t\t\t\t\t<label htmlFor={\"episodeFile\"}>업로드</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tid=\"episodeFile\" \n\t\t\t\t\t\t\tname={\"thumbnail_file\"} \n\t\t\t\t\t\t\tonChange={(event) => handleChangeFile(event, 2)} \n\t\t\t\t\t\t\tmultiple=\"multiple\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t{/* {imgBase64.map((item) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"d-block w-100\"\n\t\t\t\t\t\t\t\tsrc={item}\n\t\t\t\t\t\t\t\talt=\"First slide\"\n\t\t\t\t\t\t\t\tstyle={{width:\"100%\",height:\"550px\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}) } */}\n\t\t\t\t\t<Button onClick={WriteBoard}>작성완료</Button>\n\t\t\t\t</Stack>\n\t\t\t</Wrapper>\n\t\t</>\n\t)\n}","/Users/sa/dev/git/comicstack-backend/webapp/src/components/viewBody.js",["188","189"],"import styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport { \n\tgetEpisodeImage, \n\tuseStateEpisodeImage, \n\tuseDispatchEpisodeImage\n} from 'contextAPI/episodeImg';\n\nconst Body= styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tpadding-top: ${props => props.viewHeaderUI ? \"4.375rem\" : \"0\"};\n\t/* background-color: brown; */\n`;\n\nconst BodyWrapper= styled.div`\n\twidth: 100%;\n\theight: 100%;\n\t/* background-color: brown; */\n\t@media(min-width: 720px){\n\t\twidth: 45rem;\n\t\tmargin: 0 auto;\n\t}\n\t>img {\n\t\twidth: 100%;\n\t}\n`;\n\nexport const ViewBody = (props) => {\n\n\tconst { viewHeaderUI, setViewHeaderUI, toonId, name } = props;\n\tconst episodeImageState = useStateEpisodeImage();\n\tconst episodeImageDispatch = useDispatchEpisodeImage();\n\n\tconst [scrollY, setScrollY] = useState(0);\n\n\tfunction logit() {\n\t\tsetScrollY(window.pageYOffset);\n\t\tif(window.pageYOffset === 0){\n\t\t\tsetViewHeaderUI(true)\n\t\t} else {\n\t\t\tsetViewHeaderUI(false);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfunction watchScroll() {\n\t\t\twindow.addEventListener(\"scroll\", logit);\n\t\t}\n\t\twatchScroll();\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\", logit);\n\t\t};\n\t});\n\n\tuseEffect(() => {\n\t\tgetEpisodeImage(episodeImageDispatch, toonId, name);\n\t},[toonId, name])\n\n\treturn (\n\t\t\t<Body \n\t\t\t\tonClick={() => setViewHeaderUI(!viewHeaderUI)}\n\t\t\t\tviewHeaderUI={viewHeaderUI}\n\t\t\t>\n\t\t\t\t<BodyWrapper>\n\t\t\t\t{\n\t\t\t\t\tepisodeImageState.entity.toon_context &&\n\t\t\t\t\tepisodeImageState.entity.toon_context.map((item) => (\n\t\t\t\t\t\t<img src={item} alt={\"\"} key={item}/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t\t</BodyWrapper>\n\t\t\t</Body>\n\t)\n}\n","/Users/sa/dev/git/comicstack-backend/webapp/src/components/viewHeader.js",[],{"ruleId":"190","severity":1,"message":"191","line":137,"column":10,"nodeType":"192","messageId":"193","endLine":137,"endColumn":32},{"ruleId":"190","severity":1,"message":"194","line":11,"column":17,"nodeType":"192","messageId":"193","endLine":11,"endColumn":26},{"ruleId":"190","severity":1,"message":"195","line":12,"column":23,"nodeType":"192","messageId":"193","endLine":12,"endColumn":37},{"ruleId":"190","severity":1,"message":"196","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":23},{"ruleId":"190","severity":1,"message":"197","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":14},{"ruleId":"190","severity":1,"message":"198","line":48,"column":19,"nodeType":"192","messageId":"193","endLine":48,"endColumn":30},{"ruleId":"190","severity":1,"message":"199","line":11,"column":3,"nodeType":"192","messageId":"193","endLine":11,"endColumn":20},{"ruleId":"190","severity":1,"message":"200","line":50,"column":10,"nodeType":"192","messageId":"193","endLine":50,"endColumn":27},{"ruleId":"201","severity":1,"message":"202","line":69,"column":6,"nodeType":"203","endLine":69,"endColumn":29,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"205","line":34,"column":6,"nodeType":"203","endLine":34,"endColumn":14,"suggestions":"206"},{"ruleId":"190","severity":1,"message":"197","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"194","line":10,"column":17,"nodeType":"192","messageId":"193","endLine":10,"endColumn":26},{"ruleId":"190","severity":1,"message":"207","line":11,"column":15,"nodeType":"192","messageId":"193","endLine":11,"endColumn":22},{"ruleId":"190","severity":1,"message":"208","line":7,"column":9,"nodeType":"192","messageId":"193","endLine":7,"endColumn":18},{"ruleId":"190","severity":1,"message":"209","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"210","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":17},{"ruleId":"201","severity":1,"message":"211","line":96,"column":6,"nodeType":"203","endLine":96,"endColumn":8,"suggestions":"212"},{"ruleId":"190","severity":1,"message":"213","line":48,"column":11,"nodeType":"192","messageId":"193","endLine":48,"endColumn":13},{"ruleId":"190","severity":1,"message":"214","line":48,"column":39,"nodeType":"192","messageId":"193","endLine":48,"endColumn":46},{"ruleId":"190","severity":1,"message":"215","line":1,"column":21,"nodeType":"192","messageId":"193","endLine":1,"endColumn":29},{"ruleId":"201","severity":1,"message":"216","line":81,"column":5,"nodeType":"203","endLine":81,"endColumn":31,"suggestions":"217"},{"ruleId":"190","severity":1,"message":"218","line":37,"column":9,"nodeType":"192","messageId":"193","endLine":37,"endColumn":18},{"ruleId":"190","severity":1,"message":"219","line":6,"column":17,"nodeType":"192","messageId":"193","endLine":6,"endColumn":23},{"ruleId":"190","severity":1,"message":"220","line":6,"column":25,"nodeType":"192","messageId":"193","endLine":6,"endColumn":33},{"ruleId":"190","severity":1,"message":"218","line":42,"column":9,"nodeType":"192","messageId":"193","endLine":42,"endColumn":18},{"ruleId":"190","severity":1,"message":"194","line":48,"column":17,"nodeType":"192","messageId":"193","endLine":48,"endColumn":26},{"ruleId":"190","severity":1,"message":"221","line":49,"column":21,"nodeType":"192","messageId":"193","endLine":49,"endColumn":34},{"ruleId":"190","severity":1,"message":"222","line":35,"column":9,"nodeType":"192","messageId":"193","endLine":35,"endColumn":16},{"ruleId":"201","severity":1,"message":"223","line":58,"column":4,"nodeType":"203","endLine":58,"endColumn":18,"suggestions":"224"},"no-unused-vars","'formattingDateTostring' is defined but never used.","Identifier","unusedVar","'setToonId' is assigned a value but never used.","'setEpisodeName' is assigned a value but never used.","'ToonListWrapper' is defined but never used.","'styled' is defined but never used.","'episodeName' is assigned a value but never used.","'InputRightElement' is defined but never used.","'userPasswordCheck' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfoState.idCheckLoading'. Either include it or remove the dependency array.","ArrayExpression",["225"],"React Hook useEffect has a missing dependency: 'episodeListDispatch'. Either include it or remove the dependency array.",["226"],"'setName' is assigned a value but never used.","'userState' is assigned a value but never used.","'Text' is defined but never used.","'testImage' is defined but never used.","React Hook useEffect has a missing dependency: 'comicsDispatch'. Either include it or remove the dependency array.",["227"],"'id' is assigned a value but never used.","'context' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'lectureListDispatch'. Either include it or remove the dependency array.",["228"],"'imgBase64' is assigned a value but never used.","'Select' is defined but never used.","'Textarea' is defined but never used.","'setSeriesName' is assigned a value but never used.","'scrollY' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'episodeImageDispatch'. Either include it or remove the dependency array.",["229"],{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [userInfoState.idCheck, userInfoState.idCheckLoading]",{"range":"240","text":"241"},"Update the dependencies array to be: [episodeListDispatch, toonId]",{"range":"242","text":"243"},"Update the dependencies array to be: [comicsDispatch]",{"range":"244","text":"245"},"Update the dependencies array to be: [lectureListDispatch, userState.entity.user_id]",{"range":"246","text":"247"},"Update the dependencies array to be: [toonId, name, episodeImageDispatch]",{"range":"248","text":"249"},[1568,1591],"[userInfoState.idCheck, userInfoState.idCheckLoading]",[769,777],"[episodeListDispatch, toonId]",[2413,2415],"[comicsDispatch]",[1874,1900],"[lectureListDispatch, userState.entity.user_id]",[1214,1228],"[toonId, name, episodeImageDispatch]"]